#ifndef INCLUDED_OOO_VBA_EXCEL_XSHEETOBJECT_HDL
#define INCLUDED_OOO_VBA_EXCEL_XSHEETOBJECT_HDL

#include "sal/config.h"

#include "ooo/vba/XHelperInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace excel {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XSheetObject : public ::ooo::vba::XHelperInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XSheetObject() = default;
    XSheetObject(XSheetObject const &) = default;
    XSheetObject(XSheetObject &&) = default;
    XSheetObject & operator =(XSheetObject const &) = default;
    XSheetObject & operator =(XSheetObject &&) = default;
#endif


    // Attributes
    virtual double SAL_CALL getLeft() = 0;
    virtual void SAL_CALL setLeft( double _left ) = 0;
    virtual double SAL_CALL getTop() = 0;
    virtual void SAL_CALL setTop( double _top ) = 0;
    virtual double SAL_CALL getWidth() = 0;
    virtual void SAL_CALL setWidth( double _width ) = 0;
    virtual double SAL_CALL getHeight() = 0;
    virtual void SAL_CALL setHeight( double _height ) = 0;
    virtual ::rtl::OUString SAL_CALL getName() = 0;
    virtual void SAL_CALL setName( const ::rtl::OUString& _name ) = 0;
    virtual ::rtl::OUString SAL_CALL getOnAction() = 0;
    virtual void SAL_CALL setOnAction( const ::rtl::OUString& _onaction ) = 0;
    virtual ::sal_Int32 SAL_CALL getPlacement() = 0;
    virtual void SAL_CALL setPlacement( ::sal_Int32 _placement ) = 0;
    virtual ::sal_Bool SAL_CALL getPrintObject() = 0;
    virtual void SAL_CALL setPrintObject( ::sal_Bool _printobject ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XSheetObject() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::excel::XSheetObject const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::excel::XSheetObject > *);

#endif
