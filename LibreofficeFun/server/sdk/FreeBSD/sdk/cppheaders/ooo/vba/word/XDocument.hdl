#ifndef INCLUDED_OOO_VBA_WORD_XDOCUMENT_HDL
#define INCLUDED_OOO_VBA_WORD_XDOCUMENT_HDL

#include "sal/config.h"

#include "com/sun/star/script/XInvocation.hdl"
#include "ooo/vba/XConnectable.hdl"
namespace ooo { namespace vba { namespace word { class XMailMerge; } } }
namespace ooo { namespace vba { namespace word { class XRange; } } }
namespace ooo { namespace vba { namespace word { class XWindow; } } }
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace word {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XDocument : public ::css::script::XInvocation, public ::ooo::vba::XConnectable
{
public:
#if defined LIBO_INTERNAL_ONLY
    XDocument() = default;
    XDocument(XDocument const &) = default;
    XDocument(XDocument &&) = default;
    XDocument & operator =(XDocument const &) = default;
    XDocument & operator =(XDocument &&) = default;
#endif


    // Attributes
    virtual ::css::uno::Reference< ::ooo::vba::word::XRange > SAL_CALL getContent() = 0;
    virtual ::css::uno::Reference< ::ooo::vba::word::XWindow > SAL_CALL getActiveWindow() = 0;
    virtual ::css::uno::Any SAL_CALL getAttachedTemplate() = 0;
    virtual void SAL_CALL setAttachedTemplate( const ::css::uno::Any& _attachedtemplate ) = 0;
    virtual ::sal_Int32 SAL_CALL getProtectionType() = 0;
    virtual void SAL_CALL setProtectionType( ::sal_Int32 _protectiontype ) = 0;
    virtual ::sal_Bool SAL_CALL getUpdateStylesOnOpen() = 0;
    virtual void SAL_CALL setUpdateStylesOnOpen( ::sal_Bool _updatestylesonopen ) = 0;
    virtual ::sal_Bool SAL_CALL getAutoHyphenation() = 0;
    virtual void SAL_CALL setAutoHyphenation( ::sal_Bool _autohyphenation ) = 0;
    virtual ::sal_Int32 SAL_CALL getHyphenationZone() = 0;
    virtual void SAL_CALL setHyphenationZone( ::sal_Int32 _hyphenationzone ) = 0;
    virtual ::sal_Int32 SAL_CALL getConsecutiveHyphensLimit() = 0;
    virtual void SAL_CALL setConsecutiveHyphensLimit( ::sal_Int32 _consecutivehyphenslimit ) = 0;
    virtual ::css::uno::Reference< ::ooo::vba::word::XMailMerge > SAL_CALL getMailMerge() = 0;

    // Methods
    virtual ::css::uno::Reference< ::ooo::vba::word::XRange > SAL_CALL Range( const ::css::uno::Any& Start, const ::css::uno::Any& End ) = 0;
    virtual ::css::uno::Any SAL_CALL BuiltInDocumentProperties( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL CustomDocumentProperties( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Bookmarks( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL ContentControls( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL SelectContentControlsByTag( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL SelectContentControlsByTitle( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Variables( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Paragraphs( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Styles( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Tables( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Fields( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL Shapes( const ::css::uno::Any& Index ) = 0;
    virtual void SAL_CALL Select() = 0;
    virtual ::css::uno::Any SAL_CALL Sections( const ::css::uno::Any& Index ) = 0;
    virtual void SAL_CALL Activate() = 0;
    virtual ::css::uno::Any SAL_CALL PageSetup() = 0;
    virtual ::css::uno::Any SAL_CALL TablesOfContents( const ::css::uno::Any& Index ) = 0;
    virtual ::css::uno::Any SAL_CALL FormFields( const ::css::uno::Any& Index ) = 0;
    virtual void SAL_CALL Protect( ::sal_Int32 Type, const ::css::uno::Any& NOReset, const ::css::uno::Any& Password, const ::css::uno::Any& UseIRM, const ::css::uno::Any& EnforceStyleLock ) = 0;
    virtual void SAL_CALL PrintOut( const ::css::uno::Any& Background, const ::css::uno::Any& Append, const ::css::uno::Any& Range, const ::css::uno::Any& OutputFileName, const ::css::uno::Any& From, const ::css::uno::Any& To, const ::css::uno::Any& Item, const ::css::uno::Any& Copies, const ::css::uno::Any& Pages, const ::css::uno::Any& PageType, const ::css::uno::Any& PrintToFile, const ::css::uno::Any& Collate, const ::css::uno::Any& FileName, const ::css::uno::Any& ActivePrinterMacGX, const ::css::uno::Any& ManualDuplexPrint, const ::css::uno::Any& PrintZoomColumn, const ::css::uno::Any& PrintZoomRow, const ::css::uno::Any& PrintZoomPaperWidth, const ::css::uno::Any& PrintZoomPaperHeight ) = 0;
    virtual void SAL_CALL PrintPreview() = 0;
    virtual void SAL_CALL ClosePrintPreview() = 0;
    virtual ::css::uno::Any SAL_CALL Revisions( const ::css::uno::Any& index ) = 0;
    virtual ::css::uno::Any SAL_CALL Frames( const ::css::uno::Any& index ) = 0;
    virtual void SAL_CALL SaveAs2000( const ::css::uno::Any& FileName, const ::css::uno::Any& FileFormat, const ::css::uno::Any& LockComments, const ::css::uno::Any& Password, const ::css::uno::Any& AddToRecentFiles, const ::css::uno::Any& WritePassword, const ::css::uno::Any& ReadOnlyRecommended, const ::css::uno::Any& EmbedTrueTypeFonts, const ::css::uno::Any& SaveNativePictureFormat, const ::css::uno::Any& SaveFormsData, const ::css::uno::Any& SaveAsAOCELetter ) = 0;
    virtual void SAL_CALL SaveAs( const ::css::uno::Any& FileName, const ::css::uno::Any& FileFormat, const ::css::uno::Any& LockComments, const ::css::uno::Any& Password, const ::css::uno::Any& AddToRecentFiles, const ::css::uno::Any& WritePassword, const ::css::uno::Any& ReadOnlyRecommended, const ::css::uno::Any& EmbedTrueTypeFonts, const ::css::uno::Any& SaveNativePictureFormat, const ::css::uno::Any& SaveFormsData, const ::css::uno::Any& SaveAsAOCELetter, const ::css::uno::Any& Encoding, const ::css::uno::Any& InsertLineBreaks, const ::css::uno::Any& AllowSubstitutions, const ::css::uno::Any& LineEnding, const ::css::uno::Any& AddBiDiMarks ) = 0;
    virtual void SAL_CALL Close( const ::css::uno::Any& SaveChanges, const ::css::uno::Any& OriginalFormat, const ::css::uno::Any& RouteDocument ) = 0;
    virtual void SAL_CALL SavePreviewPngAs( const ::css::uno::Any& FileName ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XDocument() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::word::XDocument const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::word::XDocument > *);

#endif
