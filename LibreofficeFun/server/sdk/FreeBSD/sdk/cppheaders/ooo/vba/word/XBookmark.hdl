#ifndef INCLUDED_OOO_VBA_WORD_XBOOKMARK_HDL
#define INCLUDED_OOO_VBA_WORD_XBOOKMARK_HDL

#include "sal/config.h"

#include "com/sun/star/container/XNamed.hdl"
#include "ooo/vba/XHelperInterface.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace word {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XBookmark : public ::ooo::vba::XHelperInterface, public ::css::container::XNamed
{
public:
#if defined LIBO_INTERNAL_ONLY
    XBookmark() = default;
    XBookmark(XBookmark const &) = default;
    XBookmark(XBookmark &&) = default;
    XBookmark & operator =(XBookmark const &) = default;
    XBookmark & operator =(XBookmark &&) = default;
#endif


    // Methods
    virtual void SAL_CALL Delete() = 0;
    virtual void SAL_CALL Select() = 0;
    virtual ::css::uno::Any SAL_CALL Range() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XBookmark() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::word::XBookmark const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::word::XBookmark > *);

#endif
