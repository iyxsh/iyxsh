#ifndef INCLUDED_COM_SUN_STAR_URI_XVNDSUNSTAREXPANDURLREFERENCE_HDL
#define INCLUDED_COM_SUN_STAR_URI_XVNDSUNSTAREXPANDURLREFERENCE_HDL

#include "sal/config.h"

#include "com/sun/star/uri/XUriReference.hdl"
#include "com/sun/star/uri/XVndSunStarExpandUrl.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace uri {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XVndSunStarExpandUrlReference : public ::css::uri::XUriReference, public ::css::uri::XVndSunStarExpandUrl
{
public:
#if defined LIBO_INTERNAL_ONLY
    XVndSunStarExpandUrlReference() = default;
    XVndSunStarExpandUrlReference(XVndSunStarExpandUrlReference const &) = default;
    XVndSunStarExpandUrlReference(XVndSunStarExpandUrlReference &&) = default;
    XVndSunStarExpandUrlReference & operator =(XVndSunStarExpandUrlReference const &) = default;
    XVndSunStarExpandUrlReference & operator =(XVndSunStarExpandUrlReference &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XVndSunStarExpandUrlReference() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::uri::XVndSunStarExpandUrlReference const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::uri::XVndSunStarExpandUrlReference > *);

#endif
