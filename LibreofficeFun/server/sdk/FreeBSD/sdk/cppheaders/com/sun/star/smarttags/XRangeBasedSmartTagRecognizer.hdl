#ifndef INCLUDED_COM_SUN_STAR_SMARTTAGS_XRANGEBASEDSMARTTAGRECOGNIZER_HDL
#define INCLUDED_COM_SUN_STAR_SMARTTAGS_XRANGEBASEDSMARTTAGRECOGNIZER_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace frame { class XController; } } } }
#include "com/sun/star/lang/XInitialization.hdl"
#include "com/sun/star/smarttags/SmartTagRecognizerMode.hdl"
namespace com { namespace sun { namespace star { namespace text { class XTextMarkup; } } } }
namespace com { namespace sun { namespace star { namespace text { class XTextRange; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace smarttags {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XRangeBasedSmartTagRecognizer : public ::css::lang::XInitialization
{
public:
#if defined LIBO_INTERNAL_ONLY
    XRangeBasedSmartTagRecognizer() = default;
    XRangeBasedSmartTagRecognizer(XRangeBasedSmartTagRecognizer const &) = default;
    XRangeBasedSmartTagRecognizer(XRangeBasedSmartTagRecognizer &&) = default;
    XRangeBasedSmartTagRecognizer & operator =(XRangeBasedSmartTagRecognizer const &) = default;
    XRangeBasedSmartTagRecognizer & operator =(XRangeBasedSmartTagRecognizer &&) = default;
#endif


    // Methods
    virtual void SAL_CALL recognizeTextRange( const ::css::uno::Reference< ::css::text::XTextRange >& xRange, ::css::smarttags::SmartTagRecognizerMode eDataType, const ::css::uno::Reference< ::css::text::XTextMarkup >& xTextMarkup, const ::rtl::OUString& aApplicationName, const ::css::uno::Reference< ::css::frame::XController >& xController ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XRangeBasedSmartTagRecognizer() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::smarttags::XRangeBasedSmartTagRecognizer const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::smarttags::XRangeBasedSmartTagRecognizer > *);

#endif
