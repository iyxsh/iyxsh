#ifndef INCLUDED_COM_SUN_STAR_FORM_RUNTIME_XFORMOPERATIONS_HDL
#define INCLUDED_COM_SUN_STAR_FORM_RUNTIME_XFORMOPERATIONS_HDL

#include "sal/config.h"

#include "com/sun/star/beans/NamedValue.hdl"
#include "com/sun/star/form/runtime/FeatureState.hdl"
namespace com { namespace sun { namespace star { namespace form { namespace runtime { class XFeatureInvalidation; } } } } }
namespace com { namespace sun { namespace star { namespace form { namespace runtime { class XFormController; } } } } }
#include "com/sun/star/lang/XComponent.hdl"
namespace com { namespace sun { namespace star { namespace sdbc { class XResultSetUpdate; } } } }
namespace com { namespace sun { namespace star { namespace sdbc { class XRowSet; } } } }
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace form { namespace runtime {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XFormOperations : public ::css::lang::XComponent
{
public:
#if defined LIBO_INTERNAL_ONLY
    XFormOperations() = default;
    XFormOperations(XFormOperations const &) = default;
    XFormOperations(XFormOperations &&) = default;
    XFormOperations & operator =(XFormOperations const &) = default;
    XFormOperations & operator =(XFormOperations &&) = default;
#endif


    // Attributes
    virtual ::css::uno::Reference< ::css::sdbc::XRowSet > SAL_CALL getCursor() = 0;
    virtual ::css::uno::Reference< ::css::sdbc::XResultSetUpdate > SAL_CALL getUpdateCursor() = 0;
    virtual ::css::uno::Reference< ::css::form::runtime::XFormController > SAL_CALL getController() = 0;
    virtual ::css::uno::Reference< ::css::form::runtime::XFeatureInvalidation > SAL_CALL getFeatureInvalidation() = 0;
    virtual void SAL_CALL setFeatureInvalidation( const ::css::uno::Reference< ::css::form::runtime::XFeatureInvalidation >& _featureinvalidation ) = 0;

    // Methods
    virtual ::css::form::runtime::FeatureState SAL_CALL getState( ::sal_Int16 Feature ) = 0;
    virtual ::sal_Bool SAL_CALL isEnabled( ::sal_Int16 Feature ) = 0;
    virtual void SAL_CALL execute( ::sal_Int16 Feature ) = 0;
    virtual void SAL_CALL executeWithArguments( ::sal_Int16 Feature, const ::css::uno::Sequence< ::css::beans::NamedValue >& Arguments ) = 0;
    virtual ::sal_Bool SAL_CALL commitCurrentRecord( ::sal_Bool& RecordInserted ) = 0;
    virtual ::sal_Bool SAL_CALL commitCurrentControl() = 0;
    virtual ::sal_Bool SAL_CALL isInsertionRow() = 0;
    virtual ::sal_Bool SAL_CALL isModifiedRow() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XFormOperations() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::form::runtime::XFormOperations const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::form::runtime::XFormOperations > *);

#endif
