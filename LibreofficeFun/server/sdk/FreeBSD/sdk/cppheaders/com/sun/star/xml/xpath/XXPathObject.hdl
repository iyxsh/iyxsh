#ifndef INCLUDED_COM_SUN_STAR_XML_XPATH_XXPATHOBJECT_HDL
#define INCLUDED_COM_SUN_STAR_XML_XPATH_XXPATHOBJECT_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
namespace com { namespace sun { namespace star { namespace xml { namespace dom { class XNodeList; } } } } }
#include "com/sun/star/xml/xpath/XPathObjectType.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace xpath {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XXPathObject : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XXPathObject() = default;
    XXPathObject(XXPathObject const &) = default;
    XXPathObject(XXPathObject &&) = default;
    XXPathObject & operator =(XXPathObject const &) = default;
    XXPathObject & operator =(XXPathObject &&) = default;
#endif


    // Methods
    virtual ::css::xml::xpath::XPathObjectType SAL_CALL getObjectType() = 0;
    virtual ::css::uno::Reference< ::css::xml::dom::XNodeList > SAL_CALL getNodeList() = 0;
    virtual ::sal_Bool SAL_CALL getBoolean() = 0;
    virtual ::sal_Int8 SAL_CALL getByte() = 0;
    virtual ::sal_Int16 SAL_CALL getShort() = 0;
    virtual ::sal_Int32 SAL_CALL getLong() = 0;
    virtual ::sal_Int64 SAL_CALL getHyper() = 0;
    virtual float SAL_CALL getFloat() = 0;
    virtual double SAL_CALL getDouble() = 0;
    virtual ::rtl::OUString SAL_CALL getString() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XXPathObject() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::xpath::XXPathObject const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::xml::xpath::XXPathObject > *);

#endif
