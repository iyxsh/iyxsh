#ifndef INCLUDED_COM_SUN_STAR_INSPECTION_XHYPERLINKCONTROL_HDL
#define INCLUDED_COM_SUN_STAR_INSPECTION_XHYPERLINKCONTROL_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace awt { class XActionListener; } } } }
#include "com/sun/star/inspection/XPropertyControl.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace inspection {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XHyperlinkControl : public ::css::inspection::XPropertyControl
{
public:
#if defined LIBO_INTERNAL_ONLY
    XHyperlinkControl() = default;
    XHyperlinkControl(XHyperlinkControl const &) = default;
    XHyperlinkControl(XHyperlinkControl &&) = default;
    XHyperlinkControl & operator =(XHyperlinkControl const &) = default;
    XHyperlinkControl & operator =(XHyperlinkControl &&) = default;
#endif


    // Methods
    virtual void SAL_CALL addActionListener( const ::css::uno::Reference< ::css::awt::XActionListener >& listener ) = 0;
    virtual void SAL_CALL removeActionListener( const ::css::uno::Reference< ::css::awt::XActionListener >& listener ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XHyperlinkControl() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::inspection::XHyperlinkControl const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::inspection::XHyperlinkControl > *);

#endif
