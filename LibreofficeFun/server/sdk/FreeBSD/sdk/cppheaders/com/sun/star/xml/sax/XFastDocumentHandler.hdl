#ifndef INCLUDED_COM_SUN_STAR_XML_SAX_XFASTDOCUMENTHANDLER_HDL
#define INCLUDED_COM_SUN_STAR_XML_SAX_XFASTDOCUMENTHANDLER_HDL

#include "sal/config.h"

#include "com/sun/star/xml/sax/XFastContextHandler.hdl"
namespace com { namespace sun { namespace star { namespace xml { namespace sax { class XLocator; } } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace sax {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XFastDocumentHandler : public ::css::xml::sax::XFastContextHandler
{
public:
#if defined LIBO_INTERNAL_ONLY
    XFastDocumentHandler() = default;
    XFastDocumentHandler(XFastDocumentHandler const &) = default;
    XFastDocumentHandler(XFastDocumentHandler &&) = default;
    XFastDocumentHandler & operator =(XFastDocumentHandler const &) = default;
    XFastDocumentHandler & operator =(XFastDocumentHandler &&) = default;
#endif


    // Methods
    virtual void SAL_CALL startDocument() = 0;
    virtual void SAL_CALL endDocument() = 0;
    virtual void SAL_CALL processingInstruction( const ::rtl::OUString& aTarget, const ::rtl::OUString& aData ) = 0;
    virtual void SAL_CALL setDocumentLocator( const ::css::uno::Reference< ::css::xml::sax::XLocator >& xLocator ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XFastDocumentHandler() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::sax::XFastDocumentHandler const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::xml::sax::XFastDocumentHandler > *);

#endif
