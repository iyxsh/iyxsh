#ifndef INCLUDED_COM_SUN_STAR_CHART2_DATA_XLABELEDDATASEQUENCE2_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_DATA_XLABELEDDATASEQUENCE2_HDL

#include "sal/config.h"

#include "com/sun/star/chart2/data/XLabeledDataSequence.hdl"
#include "com/sun/star/util/XCloneable.hdl"
#include "com/sun/star/util/XModifyBroadcaster.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 { namespace data {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XLabeledDataSequence2 : public ::css::chart2::data::XLabeledDataSequence, public ::css::util::XModifyBroadcaster, public ::css::util::XCloneable
{
public:
#if defined LIBO_INTERNAL_ONLY
    XLabeledDataSequence2() = default;
    XLabeledDataSequence2(XLabeledDataSequence2 const &) = default;
    XLabeledDataSequence2(XLabeledDataSequence2 &&) = default;
    XLabeledDataSequence2 & operator =(XLabeledDataSequence2 const &) = default;
    XLabeledDataSequence2 & operator =(XLabeledDataSequence2 &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XLabeledDataSequence2() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::data::XLabeledDataSequence2 const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::chart2::data::XLabeledDataSequence2 > *);

#endif
