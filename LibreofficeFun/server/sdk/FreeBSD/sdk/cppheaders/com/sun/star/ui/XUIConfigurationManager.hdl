#ifndef INCLUDED_COM_SUN_STAR_UI_XUICONFIGURATIONMANAGER_HDL
#define INCLUDED_COM_SUN_STAR_UI_XUICONFIGURATIONMANAGER_HDL

#include "sal/config.h"

#include "com/sun/star/beans/PropertyValue.hdl"
namespace com { namespace sun { namespace star { namespace container { class XIndexAccess; } } } }
namespace com { namespace sun { namespace star { namespace container { class XIndexContainer; } } } }
namespace com { namespace sun { namespace star { namespace ui { class XAcceleratorConfiguration; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ui {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XUIConfigurationManager : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XUIConfigurationManager() = default;
    XUIConfigurationManager(XUIConfigurationManager const &) = default;
    XUIConfigurationManager(XUIConfigurationManager &&) = default;
    XUIConfigurationManager & operator =(XUIConfigurationManager const &) = default;
    XUIConfigurationManager & operator =(XUIConfigurationManager &&) = default;
#endif


    // Methods
    virtual void SAL_CALL reset() = 0;
    virtual ::css::uno::Sequence< ::css::uno::Sequence< ::css::beans::PropertyValue > > SAL_CALL getUIElementsInfo( ::sal_Int16 ElementType ) = 0;
    virtual ::css::uno::Reference< ::css::container::XIndexContainer > SAL_CALL createSettings() = 0;
    virtual ::sal_Bool SAL_CALL hasSettings( const ::rtl::OUString& ResourceURL ) = 0;
    virtual ::css::uno::Reference< ::css::container::XIndexAccess > SAL_CALL getSettings( const ::rtl::OUString& ResourceURL, ::sal_Bool bWriteable ) = 0;
    virtual void SAL_CALL replaceSettings( const ::rtl::OUString& ResourceURL, const ::css::uno::Reference< ::css::container::XIndexAccess >& aNewData ) = 0;
    virtual void SAL_CALL removeSettings( const ::rtl::OUString& ResourceURL ) = 0;
    virtual void SAL_CALL insertSettings( const ::rtl::OUString& NewResourceURL, const ::css::uno::Reference< ::css::container::XIndexAccess >& aNewData ) = 0;
    virtual ::css::uno::Reference< ::css::uno::XInterface > SAL_CALL getImageManager() = 0;
    virtual ::css::uno::Reference< ::css::ui::XAcceleratorConfiguration > SAL_CALL getShortCutManager() = 0;
    virtual ::css::uno::Reference< ::css::uno::XInterface > SAL_CALL getEventsManager() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XUIConfigurationManager() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ui::XUIConfigurationManager const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::ui::XUIConfigurationManager > *);

#endif
