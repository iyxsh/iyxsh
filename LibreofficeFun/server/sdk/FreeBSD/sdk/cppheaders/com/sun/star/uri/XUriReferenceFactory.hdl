#ifndef INCLUDED_COM_SUN_STAR_URI_XURIREFERENCEFACTORY_HDL
#define INCLUDED_COM_SUN_STAR_URI_XURIREFERENCEFACTORY_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uri/RelativeUriExcessParentSegments.hdl"
namespace com { namespace sun { namespace star { namespace uri { class XUriReference; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace uri {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XUriReferenceFactory : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XUriReferenceFactory() = default;
    XUriReferenceFactory(XUriReferenceFactory const &) = default;
    XUriReferenceFactory(XUriReferenceFactory &&) = default;
    XUriReferenceFactory & operator =(XUriReferenceFactory const &) = default;
    XUriReferenceFactory & operator =(XUriReferenceFactory &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::css::uri::XUriReference > SAL_CALL parse( const ::rtl::OUString& uriReference ) = 0;
    virtual ::css::uno::Reference< ::css::uri::XUriReference > SAL_CALL makeAbsolute( const ::css::uno::Reference< ::css::uri::XUriReference >& baseUriReference, const ::css::uno::Reference< ::css::uri::XUriReference >& uriReference, ::sal_Bool processAdditionalSpecialSegments, ::css::uri::RelativeUriExcessParentSegments excessParentSegments ) = 0;
    virtual ::css::uno::Reference< ::css::uri::XUriReference > SAL_CALL makeRelative( const ::css::uno::Reference< ::css::uri::XUriReference >& baseUriReference, const ::css::uno::Reference< ::css::uri::XUriReference >& uriReference, ::sal_Bool preferAuthorityOverRelativePath, ::sal_Bool preferAbsoluteOverRelativePath, ::sal_Bool encodeRetainedSpecialSegments ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XUriReferenceFactory() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::uri::XUriReferenceFactory const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::uri::XUriReferenceFactory > *);

#endif
