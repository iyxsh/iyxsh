#ifndef INCLUDED_COM_SUN_STAR_TEXT_XAUTOTEXTCONTAINER2_HDL
#define INCLUDED_COM_SUN_STAR_TEXT_XAUTOTEXTCONTAINER2_HDL

#include "sal/config.h"

#include "com/sun/star/container/XIndexAccess.hdl"
#include "com/sun/star/text/XAutoTextContainer.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace text {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XAutoTextContainer2 : public ::css::text::XAutoTextContainer, public ::css::container::XIndexAccess
{
public:
#if defined LIBO_INTERNAL_ONLY
    XAutoTextContainer2() = default;
    XAutoTextContainer2(XAutoTextContainer2 const &) = default;
    XAutoTextContainer2(XAutoTextContainer2 &&) = default;
    XAutoTextContainer2 & operator =(XAutoTextContainer2 const &) = default;
    XAutoTextContainer2 & operator =(XAutoTextContainer2 &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAutoTextContainer2() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::text::XAutoTextContainer2 const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::text::XAutoTextContainer2 > *);

#endif
