#ifndef INCLUDED_COM_SUN_STAR_DRAWING_HORIZONTALDIMENSIONING_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_HORIZONTALDIMENSIONING_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class HorizontalDimensioning
{

#else

enum class SAL_DLLPUBLIC_RTTI HorizontalDimensioning
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI HorizontalDimensioning
{

#endif
    HorizontalDimensioning_AUTO = 0,
    HorizontalDimensioning_LEFT = 1,
    HorizontalDimensioning_CENTERED = 2,
    HorizontalDimensioning_RIGHT = 3,
    HorizontalDimensioning_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto HorizontalDimensioning_AUTO = HorizontalDimensioning::HorizontalDimensioning_AUTO;
constexpr auto HorizontalDimensioning_LEFT = HorizontalDimensioning::HorizontalDimensioning_LEFT;
constexpr auto HorizontalDimensioning_CENTERED = HorizontalDimensioning::HorizontalDimensioning_CENTERED;
constexpr auto HorizontalDimensioning_RIGHT = HorizontalDimensioning::HorizontalDimensioning_RIGHT;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::HorizontalDimensioning const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::HorizontalDimensioning *);

#endif
