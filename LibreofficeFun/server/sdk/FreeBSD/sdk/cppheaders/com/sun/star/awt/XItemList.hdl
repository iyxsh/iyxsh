#ifndef INCLUDED_COM_SUN_STAR_AWT_XITEMLIST_HDL
#define INCLUDED_COM_SUN_STAR_AWT_XITEMLIST_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace awt { class XItemListListener; } } } }
#include "com/sun/star/beans/Pair.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace awt {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XItemList : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XItemList() = default;
    XItemList(XItemList const &) = default;
    XItemList(XItemList &&) = default;
    XItemList & operator =(XItemList const &) = default;
    XItemList & operator =(XItemList &&) = default;
#endif


    // Attributes
    virtual ::sal_Int32 SAL_CALL getItemCount() = 0;

    // Methods
    virtual void SAL_CALL insertItem( ::sal_Int32 Position, const ::rtl::OUString& ItemText, const ::rtl::OUString& ItemImageURL ) = 0;
    virtual void SAL_CALL insertItemText( ::sal_Int32 Position, const ::rtl::OUString& ItemText ) = 0;
    virtual void SAL_CALL insertItemImage( ::sal_Int32 Position, const ::rtl::OUString& ItemImageURL ) = 0;
    virtual void SAL_CALL removeItem( ::sal_Int32 Position ) = 0;
    virtual void SAL_CALL removeAllItems() = 0;
    virtual void SAL_CALL setItemText( ::sal_Int32 Position, const ::rtl::OUString& ItemText ) = 0;
    virtual void SAL_CALL setItemImage( ::sal_Int32 Position, const ::rtl::OUString& ItemImageURL ) = 0;
    virtual void SAL_CALL setItemTextAndImage( ::sal_Int32 Position, const ::rtl::OUString& ItemText, const ::rtl::OUString& ItemImageURL ) = 0;
    virtual void SAL_CALL setItemData( ::sal_Int32 Position, const ::css::uno::Any& ItemData ) = 0;
    virtual ::rtl::OUString SAL_CALL getItemText( ::sal_Int32 Position ) = 0;
    virtual ::rtl::OUString SAL_CALL getItemImage( ::sal_Int32 Position ) = 0;
    virtual ::css::beans::Pair< ::rtl::OUString, ::rtl::OUString > SAL_CALL getItemTextAndImage( ::sal_Int32 Position ) = 0;
    virtual ::css::uno::Any SAL_CALL getItemData( ::sal_Int32 Position ) = 0;
    virtual ::css::uno::Sequence< ::css::beans::Pair< ::rtl::OUString, ::rtl::OUString > > SAL_CALL getAllItems() = 0;
    virtual void SAL_CALL addItemListListener( const ::css::uno::Reference< ::css::awt::XItemListListener >& Listener ) = 0;
    virtual void SAL_CALL removeItemListListener( const ::css::uno::Reference< ::css::awt::XItemListListener >& Listener ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XItemList() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::awt::XItemList const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::awt::XItemList > *);

#endif
