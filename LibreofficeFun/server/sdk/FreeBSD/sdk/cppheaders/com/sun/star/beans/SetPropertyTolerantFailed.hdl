#ifndef INCLUDED_COM_SUN_STAR_BEANS_SETPROPERTYTOLERANTFAILED_HDL
#define INCLUDED_COM_SUN_STAR_BEANS_SETPROPERTYTOLERANTFAILED_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace beans {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI SAL_WARN_UNUSED SetPropertyTolerantFailed {
    inline SetPropertyTolerantFailed();

    inline SetPropertyTolerantFailed(const ::rtl::OUString& Name_, const ::sal_Int16& Result_);

    ::rtl::OUString Name;
    ::sal_Int16 Result;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::beans::SetPropertyTolerantFailed const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::beans::SetPropertyTolerantFailed *);

#endif
