#ifndef INCLUDED_COM_SUN_STAR_DRAWING_TEXTUREMODE_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_TEXTUREMODE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class TextureMode
{

#else

enum class SAL_DLLPUBLIC_RTTI TextureMode
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI TextureMode
{

#endif
    TextureMode_REPLACE = 0,
    TextureMode_MODULATE = 1,
    TextureMode_BLEND = 2,
    TextureMode_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto TextureMode_REPLACE = TextureMode::TextureMode_REPLACE;
constexpr auto TextureMode_MODULATE = TextureMode::TextureMode_MODULATE;
constexpr auto TextureMode_BLEND = TextureMode::TextureMode_BLEND;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::TextureMode const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::TextureMode *);

#endif
