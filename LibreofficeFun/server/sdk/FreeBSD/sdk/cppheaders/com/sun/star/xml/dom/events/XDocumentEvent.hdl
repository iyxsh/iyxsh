#ifndef INCLUDED_COM_SUN_STAR_XML_DOM_EVENTS_XDOCUMENTEVENT_HDL
#define INCLUDED_COM_SUN_STAR_XML_DOM_EVENTS_XDOCUMENTEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
namespace com { namespace sun { namespace star { namespace xml { namespace dom { namespace events { class XEvent; } } } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace dom { namespace events {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XDocumentEvent : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XDocumentEvent() = default;
    XDocumentEvent(XDocumentEvent const &) = default;
    XDocumentEvent(XDocumentEvent &&) = default;
    XDocumentEvent & operator =(XDocumentEvent const &) = default;
    XDocumentEvent & operator =(XDocumentEvent &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::css::xml::dom::events::XEvent > SAL_CALL createEvent( const ::rtl::OUString& eventType ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XDocumentEvent() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::dom::events::XDocumentEvent const *);
} } } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::xml::dom::events::XDocumentEvent > *);

#endif
