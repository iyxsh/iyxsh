#ifndef INCLUDED_COM_SUN_STAR_PACKAGES_MANIFEST_XMANIFESTWRITER_HDL
#define INCLUDED_COM_SUN_STAR_PACKAGES_MANIFEST_XMANIFESTWRITER_HDL

#include "sal/config.h"

#include "com/sun/star/beans/PropertyValue.hdl"
namespace com { namespace sun { namespace star { namespace io { class XOutputStream; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace packages { namespace manifest {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XManifestWriter : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XManifestWriter() = default;
    XManifestWriter(XManifestWriter const &) = default;
    XManifestWriter(XManifestWriter &&) = default;
    XManifestWriter & operator =(XManifestWriter const &) = default;
    XManifestWriter & operator =(XManifestWriter &&) = default;
#endif


    // Methods
    virtual void SAL_CALL writeManifestSequence( const ::css::uno::Reference< ::css::io::XOutputStream >& rStream, const ::css::uno::Sequence< ::css::uno::Sequence< ::css::beans::PropertyValue > >& rSequence ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XManifestWriter() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::packages::manifest::XManifestWriter const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::packages::manifest::XManifestWriter > *);

#endif
