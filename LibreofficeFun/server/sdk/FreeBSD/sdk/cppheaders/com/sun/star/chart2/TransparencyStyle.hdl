#ifndef INCLUDED_COM_SUN_STAR_CHART2_TRANSPARENCYSTYLE_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_TRANSPARENCYSTYLE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class TransparencyStyle
{

#else

enum class SAL_DLLPUBLIC_RTTI TransparencyStyle
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI TransparencyStyle
{

#endif
    TransparencyStyle_NONE = 0,
    TransparencyStyle_LINEAR = 1,
    TransparencyStyle_GRADIENT = 2,
    TransparencyStyle_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto TransparencyStyle_NONE = TransparencyStyle::TransparencyStyle_NONE;
constexpr auto TransparencyStyle_LINEAR = TransparencyStyle::TransparencyStyle_LINEAR;
constexpr auto TransparencyStyle_GRADIENT = TransparencyStyle::TransparencyStyle_GRADIENT;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::TransparencyStyle const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::chart2::TransparencyStyle *);

#endif
