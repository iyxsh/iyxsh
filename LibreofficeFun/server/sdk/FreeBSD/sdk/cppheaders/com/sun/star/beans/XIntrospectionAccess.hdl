#ifndef INCLUDED_COM_SUN_STAR_BEANS_XINTROSPECTIONACCESS_HDL
#define INCLUDED_COM_SUN_STAR_BEANS_XINTROSPECTIONACCESS_HDL

#include "sal/config.h"

#include "com/sun/star/beans/Property.hdl"
namespace com { namespace sun { namespace star { namespace reflection { class XIdlMethod; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "com/sun/star/uno/Type.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace beans {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XIntrospectionAccess : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XIntrospectionAccess() = default;
    XIntrospectionAccess(XIntrospectionAccess const &) = default;
    XIntrospectionAccess(XIntrospectionAccess &&) = default;
    XIntrospectionAccess & operator =(XIntrospectionAccess const &) = default;
    XIntrospectionAccess & operator =(XIntrospectionAccess &&) = default;
#endif


    // Methods
    virtual ::sal_Int32 SAL_CALL getSuppliedMethodConcepts() = 0;
    virtual ::sal_Int32 SAL_CALL getSuppliedPropertyConcepts() = 0;
    virtual ::css::beans::Property SAL_CALL getProperty( const ::rtl::OUString& aName, ::sal_Int32 nPropertyConcepts ) = 0;
    virtual ::sal_Bool SAL_CALL hasProperty( const ::rtl::OUString& aName, ::sal_Int32 nPropertyConcepts ) = 0;
    virtual ::css::uno::Sequence< ::css::beans::Property > SAL_CALL getProperties( ::sal_Int32 nPropertyConcepts ) = 0;
    virtual ::css::uno::Reference< ::css::reflection::XIdlMethod > SAL_CALL getMethod( const ::rtl::OUString& aName, ::sal_Int32 nMethodConcepts ) = 0;
    virtual ::sal_Bool SAL_CALL hasMethod( const ::rtl::OUString& aName, ::sal_Int32 nMethodConcepts ) = 0;
    virtual ::css::uno::Sequence< ::css::uno::Reference< ::css::reflection::XIdlMethod > > SAL_CALL getMethods( ::sal_Int32 nMethodConcepts ) = 0;
    virtual ::css::uno::Sequence< ::css::uno::Type > SAL_CALL getSupportedListeners() = 0;
    virtual ::css::uno::Reference< ::css::uno::XInterface > SAL_CALL queryAdapter( const ::css::uno::Type& aInterfaceType ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XIntrospectionAccess() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::beans::XIntrospectionAccess const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::beans::XIntrospectionAccess > *);

#endif
