#ifndef INCLUDED_COM_SUN_STAR_SDB_XQUERYDEFINITION_HDL
#define INCLUDED_COM_SUN_STAR_SDB_XQUERYDEFINITION_HDL

#include "sal/config.h"

#include "com/sun/star/beans/XPropertySet.hdl"
#include "com/sun/star/lang/XComponent.hdl"
#include "com/sun/star/ucb/XContent.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sdb {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XQueryDefinition : public ::css::beans::XPropertySet, public ::css::ucb::XContent, public ::css::lang::XComponent
{
public:
#if defined LIBO_INTERNAL_ONLY
    XQueryDefinition() = default;
    XQueryDefinition(XQueryDefinition const &) = default;
    XQueryDefinition(XQueryDefinition &&) = default;
    XQueryDefinition & operator =(XQueryDefinition const &) = default;
    XQueryDefinition & operator =(XQueryDefinition &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XQueryDefinition() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sdb::XQueryDefinition const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::sdb::XQueryDefinition > *);

#endif
