#ifndef INCLUDED_COM_SUN_STAR_CHART2_SCALEDATA_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_SCALEDATA_HDL

#include "sal/config.h"

#include "com/sun/star/chart/TimeIncrement.hdl"
#include "com/sun/star/chart2/AxisOrientation.hdl"
#include "com/sun/star/chart2/IncrementData.hdl"
namespace com { namespace sun { namespace star { namespace chart2 { class XScaling; } } } }
namespace com { namespace sun { namespace star { namespace chart2 { namespace data { class XLabeledDataSequence; } } } } }
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI ScaleData {
    inline ScaleData();

    inline ScaleData(const ::css::uno::Any& Minimum_, const ::css::uno::Any& Maximum_, const ::css::uno::Any& Origin_, const ::css::chart2::AxisOrientation& Orientation_, const ::css::uno::Reference< ::css::chart2::XScaling >& Scaling_, const ::css::uno::Reference< ::css::chart2::data::XLabeledDataSequence >& Categories_, const ::sal_Int32& AxisType_, const ::sal_Bool& AutoDateAxis_, const ::sal_Bool& ShiftedCategoryPosition_, const ::css::chart2::IncrementData& IncrementData_, const ::css::chart::TimeIncrement& TimeIncrement_);

    ::css::uno::Any Minimum;
    ::css::uno::Any Maximum;
    ::css::uno::Any Origin;
    ::css::chart2::AxisOrientation Orientation;
    ::css::uno::Reference< ::css::chart2::XScaling > Scaling;
    ::css::uno::Reference< ::css::chart2::data::XLabeledDataSequence > Categories;
    ::sal_Int32 AxisType;
    ::sal_Bool AutoDateAxis;
    ::sal_Bool ShiftedCategoryPosition;
    ::css::chart2::IncrementData IncrementData;
    ::css::chart::TimeIncrement TimeIncrement;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::ScaleData const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::chart2::ScaleData *);

#endif
