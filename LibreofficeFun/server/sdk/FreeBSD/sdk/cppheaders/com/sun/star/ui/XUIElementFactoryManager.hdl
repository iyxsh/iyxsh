#ifndef INCLUDED_COM_SUN_STAR_UI_XUIELEMENTFACTORYMANAGER_HDL
#define INCLUDED_COM_SUN_STAR_UI_XUIELEMENTFACTORYMANAGER_HDL

#include "sal/config.h"

#include "com/sun/star/ui/XUIElementFactory.hdl"
#include "com/sun/star/ui/XUIElementFactoryRegistration.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ui {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XUIElementFactoryManager : public ::css::ui::XUIElementFactory, public ::css::ui::XUIElementFactoryRegistration
{
public:
#if defined LIBO_INTERNAL_ONLY
    XUIElementFactoryManager() = default;
    XUIElementFactoryManager(XUIElementFactoryManager const &) = default;
    XUIElementFactoryManager(XUIElementFactoryManager &&) = default;
    XUIElementFactoryManager & operator =(XUIElementFactoryManager const &) = default;
    XUIElementFactoryManager & operator =(XUIElementFactoryManager &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XUIElementFactoryManager() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ui::XUIElementFactoryManager const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::ui::XUIElementFactoryManager > *);

#endif
