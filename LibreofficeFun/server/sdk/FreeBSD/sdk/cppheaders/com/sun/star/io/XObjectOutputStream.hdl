#ifndef INCLUDED_COM_SUN_STAR_IO_XOBJECTOUTPUTSTREAM_HDL
#define INCLUDED_COM_SUN_STAR_IO_XOBJECTOUTPUTSTREAM_HDL

#include "sal/config.h"

#include "com/sun/star/io/XDataOutputStream.hdl"
namespace com { namespace sun { namespace star { namespace io { class XPersistObject; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace io {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XObjectOutputStream : public ::css::io::XDataOutputStream
{
public:
#if defined LIBO_INTERNAL_ONLY
    XObjectOutputStream() = default;
    XObjectOutputStream(XObjectOutputStream const &) = default;
    XObjectOutputStream(XObjectOutputStream &&) = default;
    XObjectOutputStream & operator =(XObjectOutputStream const &) = default;
    XObjectOutputStream & operator =(XObjectOutputStream &&) = default;
#endif


    // Methods
    virtual void SAL_CALL writeObject( const ::css::uno::Reference< ::css::io::XPersistObject >& Object ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XObjectOutputStream() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::io::XObjectOutputStream const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::io::XObjectOutputStream > *);

#endif
