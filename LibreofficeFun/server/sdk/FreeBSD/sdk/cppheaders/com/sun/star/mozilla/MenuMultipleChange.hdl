#ifndef INCLUDED_COM_SUN_STAR_MOZILLA_MENUMULTIPLECHANGE_HDL
#define INCLUDED_COM_SUN_STAR_MOZILLA_MENUMULTIPLECHANGE_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace mozilla {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI SAL_WARN_UNUSED MenuMultipleChange {
    inline MenuMultipleChange();

    inline MenuMultipleChange(const ::sal_Int16& ID_, const ::sal_Int16& GroupID_, const ::sal_Int16& PreItemID_, const ::rtl::OUString& ItemText_, const ::sal_Bool& IsVisible_, const ::sal_Bool& IsActive_, const ::sal_Bool& IsCheckable_, const ::sal_Bool& IsChecked_, const ::css::uno::Sequence< ::sal_Int8 >& Image_);

    ::sal_Int16 ID;
    ::sal_Int16 GroupID;
    ::sal_Int16 PreItemID;
    ::rtl::OUString ItemText;
    ::sal_Bool IsVisible;
    ::sal_Bool IsActive;
    ::sal_Bool IsCheckable;
    ::sal_Bool IsChecked;
    ::css::uno::Sequence< ::sal_Int8 > Image;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::mozilla::MenuMultipleChange const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::mozilla::MenuMultipleChange *);

#endif
