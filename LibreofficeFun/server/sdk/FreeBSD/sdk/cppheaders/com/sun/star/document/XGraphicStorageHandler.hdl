#ifndef INCLUDED_COM_SUN_STAR_DOCUMENT_XGRAPHICSTORAGEHANDLER_HDL
#define INCLUDED_COM_SUN_STAR_DOCUMENT_XGRAPHICSTORAGEHANDLER_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace graphic { class XGraphic; } } } }
namespace com { namespace sun { namespace star { namespace io { class XInputStream; } } } }
namespace com { namespace sun { namespace star { namespace io { class XOutputStream; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace document {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XGraphicStorageHandler : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XGraphicStorageHandler() = default;
    XGraphicStorageHandler(XGraphicStorageHandler const &) = default;
    XGraphicStorageHandler(XGraphicStorageHandler &&) = default;
    XGraphicStorageHandler & operator =(XGraphicStorageHandler const &) = default;
    XGraphicStorageHandler & operator =(XGraphicStorageHandler &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::css::graphic::XGraphic > SAL_CALL loadGraphic( const ::rtl::OUString& aURL ) = 0;
    virtual ::css::uno::Reference< ::css::graphic::XGraphic > SAL_CALL loadGraphicFromOutputStream( const ::css::uno::Reference< ::css::io::XOutputStream >& xOutputStream ) = 0;
    virtual ::rtl::OUString SAL_CALL saveGraphic( const ::css::uno::Reference< ::css::graphic::XGraphic >& xGraphic ) = 0;
    virtual ::rtl::OUString SAL_CALL saveGraphicByName( const ::css::uno::Reference< ::css::graphic::XGraphic >& xGraphic, ::rtl::OUString& savedMimeType, const ::rtl::OUString& aRequestedName ) = 0;
    virtual ::css::uno::Reference< ::css::io::XInputStream > SAL_CALL createInputStream( const ::css::uno::Reference< ::css::graphic::XGraphic >& xGraphic ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XGraphicStorageHandler() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::document::XGraphicStorageHandler const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::document::XGraphicStorageHandler > *);

#endif
