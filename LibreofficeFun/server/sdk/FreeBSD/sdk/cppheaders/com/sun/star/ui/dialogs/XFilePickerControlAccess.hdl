#ifndef INCLUDED_COM_SUN_STAR_UI_DIALOGS_XFILEPICKERCONTROLACCESS_HDL
#define INCLUDED_COM_SUN_STAR_UI_DIALOGS_XFILEPICKERCONTROLACCESS_HDL

#include "sal/config.h"

#include "com/sun/star/ui/dialogs/XFilePicker.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ui { namespace dialogs {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XFilePickerControlAccess : public ::css::ui::dialogs::XFilePicker
{
public:
#if defined LIBO_INTERNAL_ONLY
    XFilePickerControlAccess() = default;
    XFilePickerControlAccess(XFilePickerControlAccess const &) = default;
    XFilePickerControlAccess(XFilePickerControlAccess &&) = default;
    XFilePickerControlAccess & operator =(XFilePickerControlAccess const &) = default;
    XFilePickerControlAccess & operator =(XFilePickerControlAccess &&) = default;
#endif


    // Methods
    virtual void SAL_CALL setValue( ::sal_Int16 ControlId, ::sal_Int16 aControlAction, const ::css::uno::Any& aValue ) = 0;
    virtual ::css::uno::Any SAL_CALL getValue( ::sal_Int16 aControlId, ::sal_Int16 aControlAction ) = 0;
    virtual void SAL_CALL setLabel( ::sal_Int16 aControlId, const ::rtl::OUString& aLabel ) = 0;
    virtual ::rtl::OUString SAL_CALL getLabel( ::sal_Int16 aControlId ) = 0;
    virtual void SAL_CALL enableControl( ::sal_Int16 ControlId, ::sal_Bool bEnable ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XFilePickerControlAccess() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ui::dialogs::XFilePickerControlAccess const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::ui::dialogs::XFilePickerControlAccess > *);

#endif
