#ifndef INCLUDED_COM_SUN_STAR_SDBC_XCONNECTIONPOOL_HDL
#define INCLUDED_COM_SUN_STAR_SDBC_XCONNECTIONPOOL_HDL

#include "sal/config.h"

#include "com/sun/star/sdbc/XDriverAccess.hdl"
#include "com/sun/star/sdbc/XDriverManager.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sdbc {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XConnectionPool : public ::css::sdbc::XDriverManager, public ::css::sdbc::XDriverAccess
{
public:
#if defined LIBO_INTERNAL_ONLY
    XConnectionPool() = default;
    XConnectionPool(XConnectionPool const &) = default;
    XConnectionPool(XConnectionPool &&) = default;
    XConnectionPool & operator =(XConnectionPool const &) = default;
    XConnectionPool & operator =(XConnectionPool &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XConnectionPool() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sdbc::XConnectionPool const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::sdbc::XConnectionPool > *);

#endif
