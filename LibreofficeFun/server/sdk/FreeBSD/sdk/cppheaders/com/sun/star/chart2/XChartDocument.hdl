#ifndef INCLUDED_COM_SUN_STAR_CHART2_XCHARTDOCUMENT_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_XCHARTDOCUMENT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace beans { class XPropertySet; } } } }
namespace com { namespace sun { namespace star { namespace chart2 { class XChartTypeManager; } } } }
namespace com { namespace sun { namespace star { namespace chart2 { class XDiagram; } } } }
namespace com { namespace sun { namespace star { namespace chart2 { namespace data { class XDataProvider; } } } } }
#include "com/sun/star/frame/XModel.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XChartDocument : public ::css::frame::XModel
{
public:
#if defined LIBO_INTERNAL_ONLY
    XChartDocument() = default;
    XChartDocument(XChartDocument const &) = default;
    XChartDocument(XChartDocument &&) = default;
    XChartDocument & operator =(XChartDocument const &) = default;
    XChartDocument & operator =(XChartDocument &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::css::chart2::XDiagram > SAL_CALL getFirstDiagram() = 0;
    virtual void SAL_CALL setFirstDiagram( const ::css::uno::Reference< ::css::chart2::XDiagram >& xDiagram ) = 0;
    virtual void SAL_CALL createInternalDataProvider( ::sal_Bool bCloneExistingData ) = 0;
    virtual ::sal_Bool SAL_CALL hasInternalDataProvider() = 0;
    virtual ::css::uno::Reference< ::css::chart2::data::XDataProvider > SAL_CALL getDataProvider() = 0;
    virtual void SAL_CALL setChartTypeManager( const ::css::uno::Reference< ::css::chart2::XChartTypeManager >& xNewManager ) = 0;
    virtual ::css::uno::Reference< ::css::chart2::XChartTypeManager > SAL_CALL getChartTypeManager() = 0;
    virtual ::css::uno::Reference< ::css::beans::XPropertySet > SAL_CALL getPageBackground() = 0;
    virtual void SAL_CALL createDefaultChart() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XChartDocument() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::XChartDocument const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::chart2::XChartDocument > *);

#endif
