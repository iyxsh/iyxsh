#ifndef INCLUDED_COM_SUN_STAR_DRAWING_HATCH_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_HATCH_HDL

#include "sal/config.h"

#include "com/sun/star/drawing/HatchStyle.hdl"
#include "com/sun/star/util/Color.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI SAL_WARN_UNUSED Hatch {
    inline Hatch();

    inline Hatch(const ::css::drawing::HatchStyle& Style_, const ::sal_Int32& Color_, const ::sal_Int32& Distance_, const ::sal_Int32& Angle_);

    ::css::drawing::HatchStyle Style;
    ::sal_Int32 Color;
    ::sal_Int32 Distance;
    ::sal_Int32 Angle;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::Hatch const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::Hatch *);

#endif
