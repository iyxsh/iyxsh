#ifndef INCLUDED_COM_SUN_STAR_LINGUISTIC2_DICTIONARYTYPE_HDL
#define INCLUDED_COM_SUN_STAR_LINGUISTIC2_DICTIONARYTYPE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace linguistic2 {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class DictionaryType
{

#else

enum class SAL_DLLPUBLIC_RTTI DictionaryType
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI DictionaryType
{

#endif
    DictionaryType_POSITIVE = 0,
    DictionaryType_NEGATIVE = 1,
    DictionaryType_MIXED = 2,
    DictionaryType_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto DictionaryType_POSITIVE = DictionaryType::DictionaryType_POSITIVE;
constexpr auto DictionaryType_NEGATIVE = DictionaryType::DictionaryType_NEGATIVE;
constexpr auto DictionaryType_MIXED = DictionaryType::DictionaryType_MIXED;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::linguistic2::DictionaryType const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::linguistic2::DictionaryType *);

#endif
