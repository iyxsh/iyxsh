#ifndef INCLUDED_COM_SUN_STAR_STYLE_XAUTOSTYLE_HDL
#define INCLUDED_COM_SUN_STAR_STYLE_XAUTOSTYLE_HDL

#include "sal/config.h"

#include "com/sun/star/beans/PropertyValues.hdl"
#include "com/sun/star/beans/XMultiPropertySet.hdl"
#include "com/sun/star/beans/XMultiPropertyStates.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace style {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XAutoStyle : public ::css::beans::XMultiPropertySet, public ::css::beans::XMultiPropertyStates
{
public:
#if defined LIBO_INTERNAL_ONLY
    XAutoStyle() = default;
    XAutoStyle(XAutoStyle const &) = default;
    XAutoStyle(XAutoStyle &&) = default;
    XAutoStyle & operator =(XAutoStyle const &) = default;
    XAutoStyle & operator =(XAutoStyle &&) = default;
#endif


    // Methods
    virtual ::css::uno::Sequence< ::css::beans::PropertyValue > SAL_CALL getProperties() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAutoStyle() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::style::XAutoStyle const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::style::XAutoStyle > *);

#endif
