#ifndef INCLUDED_COM_SUN_STAR_CHART2_XLABELED_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_XLABELED_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace chart2 { class XTitle; } } } }
#include "com/sun/star/drawing/RectanglePoint.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XLabeled : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XLabeled() = default;
    XLabeled(XLabeled const &) = default;
    XLabeled(XLabeled &&) = default;
    XLabeled & operator =(XLabeled const &) = default;
    XLabeled & operator =(XLabeled &&) = default;
#endif


    // Methods
    virtual void SAL_CALL setLabel( const ::css::uno::Reference< ::css::chart2::XTitle >& xTitle ) = 0;
    virtual ::css::uno::Reference< ::css::chart2::XTitle > SAL_CALL getLabel() = 0;
    virtual void SAL_CALL setOwnAnchor( ::css::drawing::RectanglePoint aAnchorPoint ) = 0;
    virtual ::css::drawing::RectanglePoint SAL_CALL getOwnAnchor() = 0;
    virtual void SAL_CALL setLabelAnchor( ::css::drawing::RectanglePoint aAnchorPoint ) = 0;
    virtual ::css::drawing::RectanglePoint SAL_CALL getLabelAnchor() = 0;
    virtual void SAL_CALL setOffset( const ::css::uno::Sequence< double >& aOffsetVector ) = 0;
    virtual ::css::uno::Sequence< double > SAL_CALL getOffset() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XLabeled() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::XLabeled const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::chart2::XLabeled > *);

#endif
