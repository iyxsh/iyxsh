#ifndef INCLUDED_COM_SUN_STAR_IO_XTEXTOUTPUTSTREAM2_HDL
#define INCLUDED_COM_SUN_STAR_IO_XTEXTOUTPUTSTREAM2_HDL

#include "sal/config.h"

#include "com/sun/star/io/XActiveDataSource.hdl"
#include "com/sun/star/io/XTextOutputStream.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace io {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XTextOutputStream2 : public ::css::io::XTextOutputStream, public ::css::io::XActiveDataSource
{
public:
#if defined LIBO_INTERNAL_ONLY
    XTextOutputStream2() = default;
    XTextOutputStream2(XTextOutputStream2 const &) = default;
    XTextOutputStream2(XTextOutputStream2 &&) = default;
    XTextOutputStream2 & operator =(XTextOutputStream2 const &) = default;
    XTextOutputStream2 & operator =(XTextOutputStream2 &&) = default;
#endif


    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XTextOutputStream2() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::io::XTextOutputStream2 const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::io::XTextOutputStream2 > *);

#endif
