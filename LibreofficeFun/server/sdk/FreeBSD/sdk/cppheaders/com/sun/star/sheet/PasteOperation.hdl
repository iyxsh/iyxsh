#ifndef INCLUDED_COM_SUN_STAR_SHEET_PASTEOPERATION_HDL
#define INCLUDED_COM_SUN_STAR_SHEET_PASTEOPERATION_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sheet {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class PasteOperation
{

#else

enum class SAL_DLLPUBLIC_RTTI PasteOperation
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI PasteOperation
{

#endif
    PasteOperation_NONE = 0,
    PasteOperation_ADD = 1,
    PasteOperation_SUBTRACT = 2,
    PasteOperation_MULTIPLY = 3,
    PasteOperation_DIVIDE = 4,
    PasteOperation_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto PasteOperation_NONE = PasteOperation::PasteOperation_NONE;
constexpr auto PasteOperation_ADD = PasteOperation::PasteOperation_ADD;
constexpr auto PasteOperation_SUBTRACT = PasteOperation::PasteOperation_SUBTRACT;
constexpr auto PasteOperation_MULTIPLY = PasteOperation::PasteOperation_MULTIPLY;
constexpr auto PasteOperation_DIVIDE = PasteOperation::PasteOperation_DIVIDE;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sheet::PasteOperation const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::sheet::PasteOperation *);

#endif
