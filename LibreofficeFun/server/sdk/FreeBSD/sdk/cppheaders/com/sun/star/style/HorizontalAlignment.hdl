#ifndef INCLUDED_COM_SUN_STAR_STYLE_HORIZONTALALIGNMENT_HDL
#define INCLUDED_COM_SUN_STAR_STYLE_HORIZONTALALIGNMENT_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace style {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class HorizontalAlignment
{

#else

enum class SAL_DLLPUBLIC_RTTI HorizontalAlignment
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI HorizontalAlignment
{

#endif
    HorizontalAlignment_LEFT = 0,
    HorizontalAlignment_CENTER = 1,
    HorizontalAlignment_RIGHT = 2,
    HorizontalAlignment_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto HorizontalAlignment_LEFT = HorizontalAlignment::HorizontalAlignment_LEFT;
constexpr auto HorizontalAlignment_CENTER = HorizontalAlignment::HorizontalAlignment_CENTER;
constexpr auto HorizontalAlignment_RIGHT = HorizontalAlignment::HorizontalAlignment_RIGHT;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::style::HorizontalAlignment const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::style::HorizontalAlignment *);

#endif
