#ifndef INCLUDED_COM_SUN_STAR_DRAWING_HATCHSTYLE_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_HATCHSTYLE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class HatchStyle
{

#else

enum class SAL_DLLPUBLIC_RTTI HatchStyle
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI HatchStyle
{

#endif
    HatchStyle_SINGLE = 0,
    HatchStyle_DOUBLE = 1,
    HatchStyle_TRIPLE = 2,
    HatchStyle_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto HatchStyle_SINGLE = HatchStyle::HatchStyle_SINGLE;
constexpr auto HatchStyle_DOUBLE = HatchStyle::HatchStyle_DOUBLE;
constexpr auto HatchStyle_TRIPLE = HatchStyle::HatchStyle_TRIPLE;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::HatchStyle const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::HatchStyle *);

#endif
