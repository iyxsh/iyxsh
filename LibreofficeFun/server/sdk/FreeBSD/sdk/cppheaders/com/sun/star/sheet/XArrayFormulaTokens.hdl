#ifndef INCLUDED_COM_SUN_STAR_SHEET_XARRAYFORMULATOKENS_HDL
#define INCLUDED_COM_SUN_STAR_SHEET_XARRAYFORMULATOKENS_HDL

#include "sal/config.h"

#include "com/sun/star/sheet/FormulaToken.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sheet {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XArrayFormulaTokens : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XArrayFormulaTokens() = default;
    XArrayFormulaTokens(XArrayFormulaTokens const &) = default;
    XArrayFormulaTokens(XArrayFormulaTokens &&) = default;
    XArrayFormulaTokens & operator =(XArrayFormulaTokens const &) = default;
    XArrayFormulaTokens & operator =(XArrayFormulaTokens &&) = default;
#endif


    // Methods
    virtual ::css::uno::Sequence< ::css::sheet::FormulaToken > SAL_CALL getArrayTokens() = 0;
    virtual void SAL_CALL setArrayTokens( const ::css::uno::Sequence< ::css::sheet::FormulaToken >& aTokens ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XArrayFormulaTokens() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sheet::XArrayFormulaTokens const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::sheet::XArrayFormulaTokens > *);

#endif
