#ifndef INCLUDED_COM_SUN_STAR_UNO_XINTERFACE_HDL
#define INCLUDED_COM_SUN_STAR_UNO_XINTERFACE_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Type.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace uno {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XInterface() = default;
    XInterface(XInterface const &) = default;
    XInterface(XInterface &&) = default;
    XInterface & operator =(XInterface const &) = default;
    XInterface & operator =(XInterface &&) = default;
#endif


    // Methods
    virtual ::css::uno::Any SAL_CALL queryInterface( const ::css::uno::Type& aType ) = 0;
    virtual void SAL_CALL acquire() = 0;
    virtual void SAL_CALL release() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XInterface() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};

} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::uno::XInterface > *);

#endif
