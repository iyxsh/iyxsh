#ifndef INCLUDED_COM_SUN_STAR_XML_DOM_SAXDOCUMENTBUILDERSTATE_HDL
#define INCLUDED_COM_SUN_STAR_XML_DOM_SAXDOCUMENTBUILDERSTATE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace dom {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class SAXDocumentBuilderState
{

#else

enum class SAL_DLLPUBLIC_RTTI SAXDocumentBuilderState
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI SAXDocumentBuilderState
{

#endif
    SAXDocumentBuilderState_READY = 0,
    SAXDocumentBuilderState_BUILDING_DOCUMENT = 1,
    SAXDocumentBuilderState_BUILDING_FRAGMENT = 2,
    SAXDocumentBuilderState_DOCUMENT_FINISHED = 3,
    SAXDocumentBuilderState_FRAGMENT_FINISHED = 4,
    SAXDocumentBuilderState_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto SAXDocumentBuilderState_READY = SAXDocumentBuilderState::SAXDocumentBuilderState_READY;
constexpr auto SAXDocumentBuilderState_BUILDING_DOCUMENT = SAXDocumentBuilderState::SAXDocumentBuilderState_BUILDING_DOCUMENT;
constexpr auto SAXDocumentBuilderState_BUILDING_FRAGMENT = SAXDocumentBuilderState::SAXDocumentBuilderState_BUILDING_FRAGMENT;
constexpr auto SAXDocumentBuilderState_DOCUMENT_FINISHED = SAXDocumentBuilderState::SAXDocumentBuilderState_DOCUMENT_FINISHED;
constexpr auto SAXDocumentBuilderState_FRAGMENT_FINISHED = SAXDocumentBuilderState::SAXDocumentBuilderState_FRAGMENT_FINISHED;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::dom::SAXDocumentBuilderState const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::xml::dom::SAXDocumentBuilderState *);

#endif
