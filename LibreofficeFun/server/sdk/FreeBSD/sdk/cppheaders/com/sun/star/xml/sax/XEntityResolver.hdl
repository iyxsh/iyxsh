#ifndef INCLUDED_COM_SUN_STAR_XML_SAX_XENTITYRESOLVER_HDL
#define INCLUDED_COM_SUN_STAR_XML_SAX_XENTITYRESOLVER_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/xml/sax/InputSource.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace sax {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XEntityResolver : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XEntityResolver() = default;
    XEntityResolver(XEntityResolver const &) = default;
    XEntityResolver(XEntityResolver &&) = default;
    XEntityResolver & operator =(XEntityResolver const &) = default;
    XEntityResolver & operator =(XEntityResolver &&) = default;
#endif


    // Methods
    virtual ::css::xml::sax::InputSource SAL_CALL resolveEntity( const ::rtl::OUString& sPublicId, const ::rtl::OUString& sSystemId ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XEntityResolver() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::sax::XEntityResolver const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::xml::sax::XEntityResolver > *);

#endif
