#ifndef INCLUDED_COM_SUN_STAR_AWT_GRID_XGRIDROWSELECTION_HDL
#define INCLUDED_COM_SUN_STAR_AWT_GRID_XGRIDROWSELECTION_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace awt { namespace grid { class XGridSelectionListener; } } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace awt { namespace grid {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XGridRowSelection : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XGridRowSelection() = default;
    XGridRowSelection(XGridRowSelection const &) = default;
    XGridRowSelection(XGridRowSelection &&) = default;
    XGridRowSelection & operator =(XGridRowSelection const &) = default;
    XGridRowSelection & operator =(XGridRowSelection &&) = default;
#endif


    // Methods
    virtual void SAL_CALL selectAllRows() = 0;
    virtual void SAL_CALL selectRow( ::sal_Int32 RowIndex ) = 0;
    virtual void SAL_CALL deselectAllRows() = 0;
    virtual void SAL_CALL deselectRow( ::sal_Int32 RowIndex ) = 0;
    virtual ::css::uno::Sequence< ::sal_Int32 > SAL_CALL getSelectedRows() = 0;
    virtual ::sal_Bool SAL_CALL hasSelectedRows() = 0;
    virtual ::sal_Bool SAL_CALL isRowSelected( ::sal_Int32 RowIndex ) = 0;
    virtual void SAL_CALL addSelectionListener( const ::css::uno::Reference< ::css::awt::grid::XGridSelectionListener >& listener ) = 0;
    virtual void SAL_CALL removeSelectionListener( const ::css::uno::Reference< ::css::awt::grid::XGridSelectionListener >& listener ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XGridRowSelection() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::awt::grid::XGridRowSelection const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::awt::grid::XGridRowSelection > *);

#endif
