#ifndef INCLUDED_COM_SUN_STAR_AWT_XFILEDIALOG_HDL
#define INCLUDED_COM_SUN_STAR_AWT_XFILEDIALOG_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace awt {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XFileDialog : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XFileDialog() = default;
    XFileDialog(XFileDialog const &) = default;
    XFileDialog(XFileDialog &&) = default;
    XFileDialog & operator =(XFileDialog const &) = default;
    XFileDialog & operator =(XFileDialog &&) = default;
#endif


    // Methods
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setPath( const ::rtl::OUString& Path ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual ::rtl::OUString SAL_CALL getPath() = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setFilters( const ::css::uno::Sequence< ::rtl::OUString >& rFilterNames, const ::css::uno::Sequence< ::rtl::OUString >& rMasks ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setCurrentFilter( const ::rtl::OUString& Filter ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual ::rtl::OUString SAL_CALL getCurrentFilter() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XFileDialog() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::awt::XFileDialog const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::awt::XFileDialog > *);

#endif
