#ifndef INCLUDED_COM_SUN_STAR_AWT_XSIMPLETABCONTROLLER_HDL
#define INCLUDED_COM_SUN_STAR_AWT_XSIMPLETABCONTROLLER_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace awt { class XTabListener; } } } }
#include "com/sun/star/beans/NamedValue.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace awt {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XSimpleTabController : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XSimpleTabController() = default;
    XSimpleTabController(XSimpleTabController const &) = default;
    XSimpleTabController(XSimpleTabController &&) = default;
    XSimpleTabController & operator =(XSimpleTabController const &) = default;
    XSimpleTabController & operator =(XSimpleTabController &&) = default;
#endif


    // Methods
    virtual ::sal_Int32 SAL_CALL insertTab() = 0;
    virtual void SAL_CALL removeTab( ::sal_Int32 ID ) = 0;
    virtual void SAL_CALL setTabProps( ::sal_Int32 ID, const ::css::uno::Sequence< ::css::beans::NamedValue >& Properties ) = 0;
    virtual ::css::uno::Sequence< ::css::beans::NamedValue > SAL_CALL getTabProps( ::sal_Int32 ID ) = 0;
    virtual void SAL_CALL activateTab( ::sal_Int32 ID ) = 0;
    virtual ::sal_Int32 SAL_CALL getActiveTabID() = 0;
    virtual void SAL_CALL addTabListener( const ::css::uno::Reference< ::css::awt::XTabListener >& Listener ) = 0;
    virtual void SAL_CALL removeTabListener( const ::css::uno::Reference< ::css::awt::XTabListener >& Listener ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XSimpleTabController() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::awt::XSimpleTabController const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::awt::XSimpleTabController > *);

#endif
