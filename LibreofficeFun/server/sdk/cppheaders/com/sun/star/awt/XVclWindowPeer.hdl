#ifndef INCLUDED_COM_SUN_STAR_AWT_XVCLWINDOWPEER_HDL
#define INCLUDED_COM_SUN_STAR_AWT_XVCLWINDOWPEER_HDL

#include "sal/config.h"

#include "com/sun/star/awt/FontDescriptor.hdl"
#include "com/sun/star/awt/XWindowPeer.hdl"
#include "com/sun/star/util/Color.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace awt {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XVclWindowPeer : public ::css::awt::XWindowPeer
{
public:
#if defined LIBO_INTERNAL_ONLY
    XVclWindowPeer() = default;
    XVclWindowPeer(XVclWindowPeer const &) = default;
    XVclWindowPeer(XVclWindowPeer &&) = default;
    XVclWindowPeer & operator =(XVclWindowPeer const &) = default;
    XVclWindowPeer & operator =(XVclWindowPeer &&) = default;
#endif


    // Methods
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual ::sal_Bool SAL_CALL isChild( const ::css::uno::Reference< ::css::awt::XWindowPeer >& Peer ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setDesignMode( ::sal_Bool bOn ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual ::sal_Bool SAL_CALL isDesignMode() = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL enableClipSiblings( ::sal_Bool bClip ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setForeground( ::sal_Int32 Color ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setControlFont( const ::css::awt::FontDescriptor& aFont ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL getStyles( ::sal_Int16 nType, ::css::awt::FontDescriptor& Font, ::sal_Int32& ForegroundColor, ::sal_Int32& BackgroundColor ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL setProperty( const ::rtl::OUString& PropertyName, const ::css::uno::Any& Value ) = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual ::css::uno::Any SAL_CALL getProperty( const ::rtl::OUString& PropertyName ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XVclWindowPeer() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::awt::XVclWindowPeer const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::awt::XVclWindowPeer > *);

#endif
