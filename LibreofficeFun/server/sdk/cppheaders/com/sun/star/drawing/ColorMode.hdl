#ifndef INCLUDED_COM_SUN_STAR_DRAWING_COLORMODE_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_COLORMODE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class ColorMode
{

#else

enum class SAL_DLLPUBLIC_RTTI ColorMode
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI ColorMode
{

#endif
    ColorMode_STANDARD = 0,
    ColorMode_GREYS = 1,
    ColorMode_MONO = 2,
    ColorMode_WATERMARK = 3,
    ColorMode_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto ColorMode_STANDARD = ColorMode::ColorMode_STANDARD;
constexpr auto ColorMode_GREYS = ColorMode::ColorMode_GREYS;
constexpr auto ColorMode_MONO = ColorMode::ColorMode_MONO;
constexpr auto ColorMode_WATERMARK = ColorMode::ColorMode_WATERMARK;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::ColorMode const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::ColorMode *);

#endif
