#ifndef INCLUDED_COM_SUN_STAR_DRAWING_MEASUREKIND_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_MEASUREKIND_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class MeasureKind
{

#else

enum class SAL_DLLPUBLIC_RTTI MeasureKind
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI MeasureKind
{

#endif
    MeasureKind_STANDARD = 0,
    MeasureKind_RADIUS = 1,
    MeasureKind_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto MeasureKind_STANDARD = MeasureKind::MeasureKind_STANDARD;
constexpr auto MeasureKind_RADIUS = MeasureKind::MeasureKind_RADIUS;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::MeasureKind const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::MeasureKind *);

#endif
