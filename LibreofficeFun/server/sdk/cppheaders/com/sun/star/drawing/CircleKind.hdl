#ifndef INCLUDED_COM_SUN_STAR_DRAWING_CIRCLEKIND_HDL
#define INCLUDED_COM_SUN_STAR_DRAWING_CIRCLEKIND_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace drawing {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class CircleKind
{

#else

enum class SAL_DLLPUBLIC_RTTI CircleKind
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI CircleKind
{

#endif
    CircleKind_FULL = 0,
    CircleKind_SECTION = 1,
    CircleKind_CUT = 2,
    CircleKind_ARC = 3,
    CircleKind_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto CircleKind_FULL = CircleKind::CircleKind_FULL;
constexpr auto CircleKind_SECTION = CircleKind::CircleKind_SECTION;
constexpr auto CircleKind_CUT = CircleKind::CircleKind_CUT;
constexpr auto CircleKind_ARC = CircleKind::CircleKind_ARC;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::drawing::CircleKind const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::drawing::CircleKind *);

#endif
