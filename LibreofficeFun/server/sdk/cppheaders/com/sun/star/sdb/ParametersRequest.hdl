#ifndef INCLUDED_COM_SUN_STAR_SDB_PARAMETERSREQUEST_HDL
#define INCLUDED_COM_SUN_STAR_SDB_PARAMETERSREQUEST_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace container { class XIndexAccess; } } } }
namespace com { namespace sun { namespace star { namespace sdbc { class XConnection; } } } }
#include "com/sun/star/task/ClassifiedInteractionRequest.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sdb {

class CPPU_GCC_DLLPUBLIC_EXPORT SAL_WARN_UNUSED ParametersRequest : public ::css::task::ClassifiedInteractionRequest
{
public:
    inline CPPU_GCC_DLLPRIVATE ParametersRequest(
#if defined LIBO_USE_SOURCE_LOCATION
    LIBO_USE_SOURCE_LOCATION::source_location location = LIBO_USE_SOURCE_LOCATION::source_location::current()
#endif

    );
    inline CPPU_GCC_DLLPRIVATE ParametersRequest(const ::rtl::OUString& Message_, const ::css::uno::Reference< ::css::uno::XInterface >& Context_, const ::css::task::InteractionClassification& Classification_, const ::css::uno::Reference< ::css::container::XIndexAccess >& Parameters_, const ::css::uno::Reference< ::css::sdbc::XConnection >& Connection_
#if defined LIBO_USE_SOURCE_LOCATION
, LIBO_USE_SOURCE_LOCATION::source_location location = LIBO_USE_SOURCE_LOCATION::source_location::current()
#endif
    );

#if !defined LIBO_INTERNAL_ONLY
    inline CPPU_GCC_DLLPRIVATE ParametersRequest(ParametersRequest const &);

    inline CPPU_GCC_DLLPRIVATE ~ParametersRequest();

    inline CPPU_GCC_DLLPRIVATE ParametersRequest & operator =(ParametersRequest const &);
#endif

    ::css::uno::Reference< ::css::container::XIndexAccess > Parameters CPPU_GCC3_ALIGN( ::css::task::ClassifiedInteractionRequest );
    ::css::uno::Reference< ::css::sdbc::XConnection > Connection;
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sdb::ParametersRequest const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::sdb::ParametersRequest *);

#endif
