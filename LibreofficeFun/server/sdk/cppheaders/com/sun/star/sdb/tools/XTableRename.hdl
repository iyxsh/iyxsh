#ifndef INCLUDED_COM_SUN_STAR_SDB_TOOLS_XTABLERENAME_HDL
#define INCLUDED_COM_SUN_STAR_SDB_TOOLS_XTABLERENAME_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace beans { class XPropertySet; } } } }
#include "com/sun/star/sdb/tools/XConnectionSupplier.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sdb { namespace tools {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XTableRename : public ::css::sdb::tools::XConnectionSupplier
{
public:
#if defined LIBO_INTERNAL_ONLY
    XTableRename() = default;
    XTableRename(XTableRename const &) = default;
    XTableRename(XTableRename &&) = default;
    XTableRename & operator =(XTableRename const &) = default;
    XTableRename & operator =(XTableRename &&) = default;
#endif


    // Methods
    virtual void SAL_CALL rename( const ::css::uno::Reference< ::css::beans::XPropertySet >& table, const ::rtl::OUString& newName ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XTableRename() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sdb::tools::XTableRename const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::sdb::tools::XTableRename > *);

#endif
