#ifndef INCLUDED_COM_SUN_STAR_UCB_XSIMPLEFILEACCESS2_HDL
#define INCLUDED_COM_SUN_STAR_UCB_XSIMPLEFILEACCESS2_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace io { class XInputStream; } } } }
#include "com/sun/star/ucb/XSimpleFileAccess.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ucb {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XSimpleFileAccess2 : public ::css::ucb::XSimpleFileAccess
{
public:
#if defined LIBO_INTERNAL_ONLY
    XSimpleFileAccess2() = default;
    XSimpleFileAccess2(XSimpleFileAccess2 const &) = default;
    XSimpleFileAccess2(XSimpleFileAccess2 &&) = default;
    XSimpleFileAccess2 & operator =(XSimpleFileAccess2 const &) = default;
    XSimpleFileAccess2 & operator =(XSimpleFileAccess2 &&) = default;
#endif


    // Methods
    virtual void SAL_CALL writeFile( const ::rtl::OUString& FileURL, const ::css::uno::Reference< ::css::io::XInputStream >& data ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XSimpleFileAccess2() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ucb::XSimpleFileAccess2 const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::ucb::XSimpleFileAccess2 > *);

#endif
