#ifndef INCLUDED_COM_SUN_STAR_UCB_XINTERACTIONSUPPLYNAME_HDL
#define INCLUDED_COM_SUN_STAR_UCB_XINTERACTIONSUPPLYNAME_HDL

#include "sal/config.h"

#include "com/sun/star/task/XInteractionContinuation.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ucb {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XInteractionSupplyName : public ::css::task::XInteractionContinuation
{
public:
#if defined LIBO_INTERNAL_ONLY
    XInteractionSupplyName() = default;
    XInteractionSupplyName(XInteractionSupplyName const &) = default;
    XInteractionSupplyName(XInteractionSupplyName &&) = default;
    XInteractionSupplyName & operator =(XInteractionSupplyName const &) = default;
    XInteractionSupplyName & operator =(XInteractionSupplyName &&) = default;
#endif


    // Methods
    virtual void SAL_CALL setName( const ::rtl::OUString& Name ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XInteractionSupplyName() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ucb::XInteractionSupplyName const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::ucb::XInteractionSupplyName > *);

#endif
