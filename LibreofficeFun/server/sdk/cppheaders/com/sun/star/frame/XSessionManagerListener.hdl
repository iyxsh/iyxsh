#ifndef INCLUDED_COM_SUN_STAR_FRAME_XSESSIONMANAGERLISTENER_HDL
#define INCLUDED_COM_SUN_STAR_FRAME_XSESSIONMANAGERLISTENER_HDL

#include "sal/config.h"

#include "com/sun/star/lang/XEventListener.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace frame {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XSessionManagerListener : public ::css::lang::XEventListener
{
public:
#if defined LIBO_INTERNAL_ONLY
    XSessionManagerListener() = default;
    XSessionManagerListener(XSessionManagerListener const &) = default;
    XSessionManagerListener(XSessionManagerListener &&) = default;
    XSessionManagerListener & operator =(XSessionManagerListener const &) = default;
    XSessionManagerListener & operator =(XSessionManagerListener &&) = default;
#endif


    // Methods
    virtual void SAL_CALL doSave( ::sal_Bool bShutdown, ::sal_Bool bCancelable ) = 0;
    virtual void SAL_CALL approveInteraction( ::sal_Bool bInteractionGranted ) = 0;
    virtual void SAL_CALL shutdownCanceled() = 0;
    virtual ::sal_Bool SAL_CALL doRestore() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XSessionManagerListener() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::frame::XSessionManagerListener const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::frame::XSessionManagerListener > *);

#endif
