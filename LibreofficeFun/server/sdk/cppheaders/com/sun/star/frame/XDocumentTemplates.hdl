#ifndef INCLUDED_COM_SUN_STAR_FRAME_XDOCUMENTTEMPLATES_HDL
#define INCLUDED_COM_SUN_STAR_FRAME_XDOCUMENTTEMPLATES_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace frame { class XStorable; } } } }
namespace com { namespace sun { namespace star { namespace ucb { class XContent; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace frame {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XDocumentTemplates : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XDocumentTemplates() = default;
    XDocumentTemplates(XDocumentTemplates const &) = default;
    XDocumentTemplates(XDocumentTemplates &&) = default;
    XDocumentTemplates & operator =(XDocumentTemplates const &) = default;
    XDocumentTemplates & operator =(XDocumentTemplates &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::css::ucb::XContent > SAL_CALL getContent() = 0;
    virtual ::sal_Bool SAL_CALL storeTemplate( const ::rtl::OUString& GroupName, const ::rtl::OUString& TemplateName, const ::css::uno::Reference< ::css::frame::XStorable >& Storable ) = 0;
    virtual ::sal_Bool SAL_CALL addTemplate( const ::rtl::OUString& GroupName, const ::rtl::OUString& TemplateName, const ::rtl::OUString& SourceURL ) = 0;
    virtual ::sal_Bool SAL_CALL removeTemplate( const ::rtl::OUString& GroupName, const ::rtl::OUString& TemplateName ) = 0;
    virtual ::sal_Bool SAL_CALL renameTemplate( const ::rtl::OUString& GroupName, const ::rtl::OUString& OldTemplateName, const ::rtl::OUString& NewTemplateName ) = 0;
    virtual ::sal_Bool SAL_CALL addGroup( const ::rtl::OUString& GroupName ) = 0;
    virtual ::sal_Bool SAL_CALL removeGroup( const ::rtl::OUString& GroupName ) = 0;
    virtual ::sal_Bool SAL_CALL renameGroup( const ::rtl::OUString& OldGroupName, const ::rtl::OUString& NewGroupName ) = 0;
    virtual void SAL_CALL update() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XDocumentTemplates() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::frame::XDocumentTemplates const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::frame::XDocumentTemplates > *);

#endif
