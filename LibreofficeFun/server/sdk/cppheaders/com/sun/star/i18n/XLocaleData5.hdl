#ifndef INCLUDED_COM_SUN_STAR_I18N_XLOCALEDATA5_HDL
#define INCLUDED_COM_SUN_STAR_I18N_XLOCALEDATA5_HDL

#include "sal/config.h"

#include "com/sun/star/i18n/LocaleDataItem2.hdl"
#include "com/sun/star/i18n/XLocaleData4.hdl"
#include "com/sun/star/lang/Locale.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace i18n {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XLocaleData5 : public ::css::i18n::XLocaleData4
{
public:
#if defined LIBO_INTERNAL_ONLY
    XLocaleData5() = default;
    XLocaleData5(XLocaleData5 const &) = default;
    XLocaleData5(XLocaleData5 &&) = default;
    XLocaleData5 & operator =(XLocaleData5 const &) = default;
    XLocaleData5 & operator =(XLocaleData5 &&) = default;
#endif


    // Methods
    virtual ::css::i18n::LocaleDataItem2 SAL_CALL getLocaleItem2( const ::css::lang::Locale& Locale ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XLocaleData5() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::i18n::XLocaleData5 const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::i18n::XLocaleData5 > *);

#endif
