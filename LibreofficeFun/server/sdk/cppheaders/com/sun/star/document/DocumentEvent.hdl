#ifndef INCLUDED_COM_SUN_STAR_DOCUMENT_DOCUMENTEVENT_HDL
#define INCLUDED_COM_SUN_STAR_DOCUMENT_DOCUMENTEVENT_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace frame { class XController2; } } } }
#include "com/sun/star/lang/EventObject.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace document {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI DocumentEvent: public ::css::lang::EventObject {
    inline DocumentEvent();

    inline DocumentEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::rtl::OUString& EventName_, const ::css::uno::Reference< ::css::frame::XController2 >& ViewController_, const ::css::uno::Any& Supplement_);

    ::rtl::OUString EventName CPPU_GCC3_ALIGN(::css::lang::EventObject);
    ::css::uno::Reference< ::css::frame::XController2 > ViewController;
    ::css::uno::Any Supplement;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::document::DocumentEvent const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::document::DocumentEvent *);

#endif
