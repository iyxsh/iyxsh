#ifndef INCLUDED_COM_SUN_STAR_SCRIPT_SCRIPTEVENT_HDL
#define INCLUDED_COM_SUN_STAR_SCRIPT_SCRIPTEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/script/AllEventObject.hdl"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace script {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI ScriptEvent: public ::css::script::AllEventObject {
    inline ScriptEvent();

    inline ScriptEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::css::uno::Any& Helper_, const ::css::uno::Type& ListenerType_, const ::rtl::OUString& MethodName_, const ::css::uno::Sequence< ::css::uno::Any >& Arguments_, const ::rtl::OUString& ScriptType_, const ::rtl::OUString& ScriptCode_);

    ::rtl::OUString ScriptType CPPU_GCC3_ALIGN(::css::script::AllEventObject);
    ::rtl::OUString ScriptCode;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::script::ScriptEvent const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::script::ScriptEvent *);

#endif
