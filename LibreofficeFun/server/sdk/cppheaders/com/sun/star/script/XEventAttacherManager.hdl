#ifndef INCLUDED_COM_SUN_STAR_SCRIPT_XEVENTATTACHERMANAGER_HDL
#define INCLUDED_COM_SUN_STAR_SCRIPT_XEVENTATTACHERMANAGER_HDL

#include "sal/config.h"

#include "com/sun/star/script/ScriptEventDescriptor.hdl"
namespace com { namespace sun { namespace star { namespace script { class XScriptListener; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace script {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XEventAttacherManager : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XEventAttacherManager() = default;
    XEventAttacherManager(XEventAttacherManager const &) = default;
    XEventAttacherManager(XEventAttacherManager &&) = default;
    XEventAttacherManager & operator =(XEventAttacherManager const &) = default;
    XEventAttacherManager & operator =(XEventAttacherManager &&) = default;
#endif


    // Methods
    virtual void SAL_CALL registerScriptEvent( ::sal_Int32 nIndex, const ::css::script::ScriptEventDescriptor& aScriptEvent ) = 0;
    virtual void SAL_CALL registerScriptEvents( ::sal_Int32 nIndex, const ::css::uno::Sequence< ::css::script::ScriptEventDescriptor >& aScriptEvents ) = 0;
    virtual void SAL_CALL revokeScriptEvent( ::sal_Int32 nIndex, const ::rtl::OUString& aListenerType, const ::rtl::OUString& aEventMethod, const ::rtl::OUString& aRemoveListenerParam ) = 0;
    virtual void SAL_CALL revokeScriptEvents( ::sal_Int32 nIndex ) = 0;
    virtual void SAL_CALL insertEntry( ::sal_Int32 nIndex ) = 0;
    virtual void SAL_CALL removeEntry( ::sal_Int32 nIndex ) = 0;
    virtual ::css::uno::Sequence< ::css::script::ScriptEventDescriptor > SAL_CALL getScriptEvents( ::sal_Int32 Index ) = 0;
    virtual void SAL_CALL attach( ::sal_Int32 nIndex, const ::css::uno::Reference< ::css::uno::XInterface >& xObject, const ::css::uno::Any& aHelper ) = 0;
    virtual void SAL_CALL detach( ::sal_Int32 nIndex, const ::css::uno::Reference< ::css::uno::XInterface >& xObject ) = 0;
    virtual void SAL_CALL addScriptListener( const ::css::uno::Reference< ::css::script::XScriptListener >& xListener ) = 0;
    virtual void SAL_CALL removeScriptListener( const ::css::uno::Reference< ::css::script::XScriptListener >& Listener ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XEventAttacherManager() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::script::XEventAttacherManager const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::script::XEventAttacherManager > *);

#endif
