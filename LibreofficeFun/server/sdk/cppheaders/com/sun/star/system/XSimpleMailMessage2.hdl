#ifndef INCLUDED_COM_SUN_STAR_SYSTEM_XSIMPLEMAILMESSAGE2_HDL
#define INCLUDED_COM_SUN_STAR_SYSTEM_XSIMPLEMAILMESSAGE2_HDL

#include "sal/config.h"

#include "com/sun/star/system/XSimpleMailMessage.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace system {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XSimpleMailMessage2 : public ::css::system::XSimpleMailMessage
{
public:
#if defined LIBO_INTERNAL_ONLY
    XSimpleMailMessage2() = default;
    XSimpleMailMessage2(XSimpleMailMessage2 const &) = default;
    XSimpleMailMessage2(XSimpleMailMessage2 &&) = default;
    XSimpleMailMessage2 & operator =(XSimpleMailMessage2 const &) = default;
    XSimpleMailMessage2 & operator =(XSimpleMailMessage2 &&) = default;
#endif


    // Attributes
    virtual ::rtl::OUString SAL_CALL getBody() = 0;
    virtual void SAL_CALL setBody( const ::rtl::OUString& _body ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XSimpleMailMessage2() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::system::XSimpleMailMessage2 const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::system::XSimpleMailMessage2 > *);

#endif
