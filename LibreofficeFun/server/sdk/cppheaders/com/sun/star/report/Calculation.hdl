#ifndef INCLUDED_COM_SUN_STAR_REPORT_CALCULATION_HDL
#define INCLUDED_COM_SUN_STAR_REPORT_CALCULATION_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace report { namespace Calculation {

static const ::sal_Int16 AVERAGE = (sal_Int16)1;
static const ::sal_Int16 CORRELATION = (sal_Int16)2;
static const ::sal_Int16 COUNT = (sal_Int16)3;
static const ::sal_Int16 COVARIANCE = (sal_Int16)4;
static const ::sal_Int16 DISTINCTCOUNT = (sal_Int16)5;
static const ::sal_Int16 MAXIMUM = (sal_Int16)6;
static const ::sal_Int16 MEDIAN = (sal_Int16)7;
static const ::sal_Int16 MINIMUM = (sal_Int16)8;
static const ::sal_Int16 MODE = (sal_Int16)9;
static const ::sal_Int16 NONE = (sal_Int16)0;
static const ::sal_Int16 NTHLARGEST = (sal_Int16)10;
static const ::sal_Int16 NTHMOSTFREQUENT = (sal_Int16)11;
static const ::sal_Int16 NTHSMALLEST = (sal_Int16)12;
static const ::sal_Int16 PERCENTAGE = (sal_Int16)13;
static const ::sal_Int16 PERCENTILE = (sal_Int16)14;
static const ::sal_Int16 POPSTANDARDDEVIATION = (sal_Int16)15;
static const ::sal_Int16 POPVARIANCE = (sal_Int16)16;
static const ::sal_Int16 SAMPLESTANDARDDEVIATION = (sal_Int16)17;
static const ::sal_Int16 SAMPLEVARIANCE = (sal_Int16)18;
static const ::sal_Int16 SUM = (sal_Int16)19;
static const ::sal_Int16 WEIGHTEDAVG = (sal_Int16)20;

} } } } }

#endif // INCLUDED_COM_SUN_STAR_REPORT_CALCULATION_HDL
