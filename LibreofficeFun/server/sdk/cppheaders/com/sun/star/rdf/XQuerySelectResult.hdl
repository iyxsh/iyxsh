#ifndef INCLUDED_COM_SUN_STAR_RDF_XQUERYSELECTRESULT_HDL
#define INCLUDED_COM_SUN_STAR_RDF_XQUERYSELECTRESULT_HDL

#include "sal/config.h"

#include "com/sun/star/container/XEnumeration.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace rdf {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XQuerySelectResult : public ::css::container::XEnumeration
{
public:
#if defined LIBO_INTERNAL_ONLY
    XQuerySelectResult() = default;
    XQuerySelectResult(XQuerySelectResult const &) = default;
    XQuerySelectResult(XQuerySelectResult &&) = default;
    XQuerySelectResult & operator =(XQuerySelectResult const &) = default;
    XQuerySelectResult & operator =(XQuerySelectResult &&) = default;
#endif


    // Methods
    virtual ::css::uno::Sequence< ::rtl::OUString > SAL_CALL getBindingNames() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XQuerySelectResult() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::rdf::XQuerySelectResult const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::rdf::XQuerySelectResult > *);

#endif
