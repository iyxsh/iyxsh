#ifndef INCLUDED_COM_SUN_STAR_RDF_XMETADATABLE_HDL
#define INCLUDED_COM_SUN_STAR_RDF_XMETADATABLE_HDL

#include "sal/config.h"

#include "com/sun/star/beans/StringPair.hdl"
#include "com/sun/star/rdf/XURI.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace rdf {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XMetadatable : public ::css::rdf::XURI
{
public:
#if defined LIBO_INTERNAL_ONLY
    XMetadatable() = default;
    XMetadatable(XMetadatable const &) = default;
    XMetadatable(XMetadatable &&) = default;
    XMetadatable & operator =(XMetadatable const &) = default;
    XMetadatable & operator =(XMetadatable &&) = default;
#endif


    // Attributes
    virtual ::css::beans::StringPair SAL_CALL getMetadataReference() = 0;
    virtual void SAL_CALL setMetadataReference( const ::css::beans::StringPair& _metadatareference ) = 0;

    // Methods
    virtual void SAL_CALL ensureMetadataReference() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XMetadatable() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::rdf::XMetadatable const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::rdf::XMetadatable > *);

#endif
