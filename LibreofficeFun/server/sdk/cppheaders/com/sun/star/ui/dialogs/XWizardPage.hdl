#ifndef INCLUDED_COM_SUN_STAR_UI_DIALOGS_XWIZARDPAGE_HDL
#define INCLUDED_COM_SUN_STAR_UI_DIALOGS_XWIZARDPAGE_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace awt { class XWindow; } } } }
#include "com/sun/star/lang/XComponent.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ui { namespace dialogs {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XWizardPage : public ::css::lang::XComponent
{
public:
#if defined LIBO_INTERNAL_ONLY
    XWizardPage() = default;
    XWizardPage(XWizardPage const &) = default;
    XWizardPage(XWizardPage &&) = default;
    XWizardPage & operator =(XWizardPage const &) = default;
    XWizardPage & operator =(XWizardPage &&) = default;
#endif


    // Attributes
    virtual ::css::uno::Reference< ::css::awt::XWindow > SAL_CALL getWindow() = 0;
    virtual ::sal_Int16 SAL_CALL getPageId() = 0;

    // Methods
    virtual void SAL_CALL activatePage() = 0;
    virtual ::sal_Bool SAL_CALL commitPage( ::sal_Int16 Reason ) = 0;
    virtual ::sal_Bool SAL_CALL canAdvance() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XWizardPage() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ui::dialogs::XWizardPage const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::ui::dialogs::XWizardPage > *);

#endif
