#ifndef INCLUDED_COM_SUN_STAR_UI_CONFIGURATIONEVENT_HDL
#define INCLUDED_COM_SUN_STAR_UI_CONFIGURATIONEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/container/ContainerEvent.hdl"
#include "com/sun/star/uno/Any.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace ui {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI ConfigurationEvent: public ::css::container::ContainerEvent {
    inline ConfigurationEvent();

    inline ConfigurationEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::css::uno::Any& Accessor_, const ::css::uno::Any& Element_, const ::css::uno::Any& ReplacedElement_, const ::rtl::OUString& ResourceURL_, const ::css::uno::Any& aInfo_);

    ::rtl::OUString ResourceURL CPPU_GCC3_ALIGN(::css::container::ContainerEvent);
    ::css::uno::Any aInfo;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::ui::ConfigurationEvent const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::ui::ConfigurationEvent *);

#endif
