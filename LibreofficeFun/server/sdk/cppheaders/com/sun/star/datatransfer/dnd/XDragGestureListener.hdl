#ifndef INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_XDRAGGESTURELISTENER_HDL
#define INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_XDRAGGESTURELISTENER_HDL

#include "sal/config.h"

#include "com/sun/star/datatransfer/dnd/DragGestureEvent.hdl"
#include "com/sun/star/lang/XEventListener.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace datatransfer { namespace dnd {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XDragGestureListener : public ::css::lang::XEventListener
{
public:
#if defined LIBO_INTERNAL_ONLY
    XDragGestureListener() = default;
    XDragGestureListener(XDragGestureListener const &) = default;
    XDragGestureListener(XDragGestureListener &&) = default;
    XDragGestureListener & operator =(XDragGestureListener const &) = default;
    XDragGestureListener & operator =(XDragGestureListener &&) = default;
#endif


    // Methods
    virtual void SAL_CALL dragGestureRecognized( const ::css::datatransfer::dnd::DragGestureEvent& dge ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XDragGestureListener() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::datatransfer::dnd::XDragGestureListener const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::datatransfer::dnd::XDragGestureListener > *);

#endif
