#ifndef INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_DRAGSOURCEDROPEVENT_HDL
#define INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_DRAGSOURCEDROPEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/datatransfer/dnd/DragSourceEvent.hdl"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace datatransfer { namespace dnd {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI DragSourceDropEvent: public ::css::datatransfer::dnd::DragSourceEvent {
    inline DragSourceDropEvent();

    inline DragSourceDropEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::css::uno::Reference< ::css::datatransfer::dnd::XDragSourceContext >& DragSourceContext_, const ::css::uno::Reference< ::css::datatransfer::dnd::XDragSource >& DragSource_, const ::sal_Int8& DropAction_, const ::sal_Bool& DropSuccess_);

    ::sal_Int8 DropAction CPPU_GCC3_ALIGN(::css::datatransfer::dnd::DragSourceEvent);
    ::sal_Bool DropSuccess;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::datatransfer::dnd::DragSourceDropEvent const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::datatransfer::dnd::DragSourceDropEvent *);

#endif
