#ifndef INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_DROPTARGETDRAGENTEREVENT_HDL
#define INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_DROPTARGETDRAGENTEREVENT_HDL

#include "sal/config.h"

#include "com/sun/star/datatransfer/DataFlavor.hdl"
#include "com/sun/star/datatransfer/dnd/DropTargetDragEvent.hdl"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace datatransfer { namespace dnd {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI DropTargetDragEnterEvent: public ::css::datatransfer::dnd::DropTargetDragEvent {
    inline DropTargetDragEnterEvent();

    inline DropTargetDragEnterEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::sal_Int8& Dummy_, const ::css::uno::Reference< ::css::datatransfer::dnd::XDropTargetDragContext >& Context_, const ::sal_Int8& DropAction_, const ::sal_Int32& LocationX_, const ::sal_Int32& LocationY_, const ::sal_Int8& SourceActions_, const ::css::uno::Sequence< ::css::datatransfer::DataFlavor >& SupportedDataFlavors_);

    ::css::uno::Sequence< ::css::datatransfer::DataFlavor > SupportedDataFlavors CPPU_GCC3_ALIGN(::css::datatransfer::dnd::DropTargetDragEvent);
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::datatransfer::dnd::DropTargetDragEnterEvent const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::datatransfer::dnd::DropTargetDragEnterEvent *);

#endif
