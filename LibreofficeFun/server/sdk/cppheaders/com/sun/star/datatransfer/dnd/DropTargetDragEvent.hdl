#ifndef INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_DROPTARGETDRAGEVENT_HDL
#define INCLUDED_COM_SUN_STAR_DATATRANSFER_DND_DROPTARGETDRAGEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/datatransfer/dnd/DropTargetEvent.hdl"
namespace com { namespace sun { namespace star { namespace datatransfer { namespace dnd { class XDropTargetDragContext; } } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace datatransfer { namespace dnd {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI DropTargetDragEvent: public ::css::datatransfer::dnd::DropTargetEvent {
    inline DropTargetDragEvent();

    inline DropTargetDragEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::sal_Int8& Dummy_, const ::css::uno::Reference< ::css::datatransfer::dnd::XDropTargetDragContext >& Context_, const ::sal_Int8& DropAction_, const ::sal_Int32& LocationX_, const ::sal_Int32& LocationY_, const ::sal_Int8& SourceActions_);

    ::css::uno::Reference< ::css::datatransfer::dnd::XDropTargetDragContext > Context CPPU_GCC3_ALIGN(::css::datatransfer::dnd::DropTargetEvent);
    ::sal_Int8 DropAction;
    ::sal_Int32 LocationX;
    ::sal_Int32 LocationY;
    ::sal_Int8 SourceActions;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::datatransfer::dnd::DropTargetDragEvent const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::datatransfer::dnd::DropTargetDragEvent *);

#endif
