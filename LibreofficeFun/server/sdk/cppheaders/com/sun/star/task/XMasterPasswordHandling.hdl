#ifndef INCLUDED_COM_SUN_STAR_TASK_XMASTERPASSWORDHANDLING_HDL
#define INCLUDED_COM_SUN_STAR_TASK_XMASTERPASSWORDHANDLING_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace task { class XInteractionHandler; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace task {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XMasterPasswordHandling : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XMasterPasswordHandling() = default;
    XMasterPasswordHandling(XMasterPasswordHandling const &) = default;
    XMasterPasswordHandling(XMasterPasswordHandling &&) = default;
    XMasterPasswordHandling & operator =(XMasterPasswordHandling const &) = default;
    XMasterPasswordHandling & operator =(XMasterPasswordHandling &&) = default;
#endif


    // Methods
    virtual ::sal_Bool SAL_CALL authorizateWithMasterPassword( const ::css::uno::Reference< ::css::task::XInteractionHandler >& xHandler ) = 0;
    virtual ::sal_Bool SAL_CALL changeMasterPassword( const ::css::uno::Reference< ::css::task::XInteractionHandler >& xHandler ) = 0;
    virtual void SAL_CALL removeMasterPassword() = 0;
    virtual ::sal_Bool SAL_CALL hasMasterPassword() = 0;
    virtual ::sal_Bool SAL_CALL allowPersistentStoring( ::sal_Bool bAllow ) = 0;
    virtual ::sal_Bool SAL_CALL isPersistentStoringAllowed() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XMasterPasswordHandling() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::task::XMasterPasswordHandling const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::task::XMasterPasswordHandling > *);

#endif
