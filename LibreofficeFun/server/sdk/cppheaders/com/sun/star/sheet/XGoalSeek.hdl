#ifndef INCLUDED_COM_SUN_STAR_SHEET_XGOALSEEK_HDL
#define INCLUDED_COM_SUN_STAR_SHEET_XGOALSEEK_HDL

#include "sal/config.h"

#include "com/sun/star/sheet/GoalResult.hdl"
#include "com/sun/star/table/CellAddress.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sheet {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XGoalSeek : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XGoalSeek() = default;
    XGoalSeek(XGoalSeek const &) = default;
    XGoalSeek(XGoalSeek &&) = default;
    XGoalSeek & operator =(XGoalSeek const &) = default;
    XGoalSeek & operator =(XGoalSeek &&) = default;
#endif


    // Methods
    virtual ::css::sheet::GoalResult SAL_CALL seekGoal( const ::css::table::CellAddress& aFormulaPosition, const ::css::table::CellAddress& aVariablePosition, const ::rtl::OUString& aGoalValue ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XGoalSeek() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sheet::XGoalSeek const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::sheet::XGoalSeek > *);

#endif
