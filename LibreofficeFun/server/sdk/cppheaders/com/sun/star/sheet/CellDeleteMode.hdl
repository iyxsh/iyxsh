#ifndef INCLUDED_COM_SUN_STAR_SHEET_CELLDELETEMODE_HDL
#define INCLUDED_COM_SUN_STAR_SHEET_CELLDELETEMODE_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace sheet {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class CellDeleteMode
{

#else

enum class SAL_DLLPUBLIC_RTTI CellDeleteMode
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI CellDeleteMode
{

#endif
    CellDeleteMode_NONE = 0,
    CellDeleteMode_UP = 1,
    CellDeleteMode_LEFT = 2,
    CellDeleteMode_ROWS = 3,
    CellDeleteMode_COLUMNS = 4,
    CellDeleteMode_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto CellDeleteMode_NONE = CellDeleteMode::CellDeleteMode_NONE;
constexpr auto CellDeleteMode_UP = CellDeleteMode::CellDeleteMode_UP;
constexpr auto CellDeleteMode_LEFT = CellDeleteMode::CellDeleteMode_LEFT;
constexpr auto CellDeleteMode_ROWS = CellDeleteMode::CellDeleteMode_ROWS;
constexpr auto CellDeleteMode_COLUMNS = CellDeleteMode::CellDeleteMode_COLUMNS;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::sheet::CellDeleteMode const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::sheet::CellDeleteMode *);

#endif
