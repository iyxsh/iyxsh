#ifndef INCLUDED_COM_SUN_STAR_XML_SAX_XWRITER_HDL
#define INCLUDED_COM_SUN_STAR_XML_SAX_XWRITER_HDL

#include "sal/config.h"

#include "com/sun/star/beans/Pair.hdl"
#include "com/sun/star/io/XActiveDataSource.hdl"
#include "com/sun/star/xml/sax/XExtendedDocumentHandler.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace sax {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XWriter : public ::css::io::XActiveDataSource, public ::css::xml::sax::XExtendedDocumentHandler
{
public:
#if defined LIBO_INTERNAL_ONLY
    XWriter() = default;
    XWriter(XWriter const &) = default;
    XWriter(XWriter &&) = default;
    XWriter & operator =(XWriter const &) = default;
    XWriter & operator =(XWriter &&) = default;
#endif


    // Methods
    virtual void SAL_CALL setCustomEntityNames( const ::css::uno::Sequence< ::css::beans::Pair< ::rtl::OUString, ::rtl::OUString > >& replacements ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XWriter() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::sax::XWriter const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::xml::sax::XWriter > *);

#endif
