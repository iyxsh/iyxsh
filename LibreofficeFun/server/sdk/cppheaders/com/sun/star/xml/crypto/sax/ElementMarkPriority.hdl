#ifndef INCLUDED_COM_SUN_STAR_XML_CRYPTO_SAX_ELEMENTMARKPRIORITY_HDL
#define INCLUDED_COM_SUN_STAR_XML_CRYPTO_SAX_ELEMENTMARKPRIORITY_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace crypto { namespace sax {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class ElementMarkPriority
{

#else

enum class SAL_DLLPUBLIC_RTTI ElementMarkPriority
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI ElementMarkPriority
{

#endif
    ElementMarkPriority_MINIMUM = 1,
    ElementMarkPriority_AFTERMODIFY = 2,
    ElementMarkPriority_BEFOREMODIFY = 3,
    ElementMarkPriority_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto ElementMarkPriority_MINIMUM = ElementMarkPriority::ElementMarkPriority_MINIMUM;
constexpr auto ElementMarkPriority_AFTERMODIFY = ElementMarkPriority::ElementMarkPriority_AFTERMODIFY;
constexpr auto ElementMarkPriority_BEFOREMODIFY = ElementMarkPriority::ElementMarkPriority_BEFOREMODIFY;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::crypto::sax::ElementMarkPriority const *);
} } } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::xml::crypto::sax::ElementMarkPriority *);

#endif
