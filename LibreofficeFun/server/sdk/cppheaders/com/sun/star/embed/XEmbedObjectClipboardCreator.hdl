#ifndef INCLUDED_COM_SUN_STAR_EMBED_XEMBEDOBJECTCLIPBOARDCREATOR_HDL
#define INCLUDED_COM_SUN_STAR_EMBED_XEMBEDOBJECTCLIPBOARDCREATOR_HDL

#include "sal/config.h"

#include "com/sun/star/beans/PropertyValue.hdl"
#include "com/sun/star/embed/InsertedObjectInfo.hdl"
namespace com { namespace sun { namespace star { namespace embed { class XStorage; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace embed {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XEmbedObjectClipboardCreator : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XEmbedObjectClipboardCreator() = default;
    XEmbedObjectClipboardCreator(XEmbedObjectClipboardCreator const &) = default;
    XEmbedObjectClipboardCreator(XEmbedObjectClipboardCreator &&) = default;
    XEmbedObjectClipboardCreator & operator =(XEmbedObjectClipboardCreator const &) = default;
    XEmbedObjectClipboardCreator & operator =(XEmbedObjectClipboardCreator &&) = default;
#endif


    // Methods
    virtual ::css::embed::InsertedObjectInfo SAL_CALL createInstanceInitFromClipboard( const ::css::uno::Reference< ::css::embed::XStorage >& xStorage, const ::rtl::OUString& sEntryName, const ::css::uno::Sequence< ::css::beans::PropertyValue >& aObjectArgs ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XEmbedObjectClipboardCreator() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::embed::XEmbedObjectClipboardCreator const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::embed::XEmbedObjectClipboardCreator > *);

#endif
