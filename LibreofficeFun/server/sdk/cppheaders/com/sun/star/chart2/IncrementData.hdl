#ifndef INCLUDED_COM_SUN_STAR_CHART2_INCREMENTDATA_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_INCREMENTDATA_HDL

#include "sal/config.h"

#include "com/sun/star/chart2/SubIncrement.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI IncrementData {
    inline IncrementData();

    inline IncrementData(const ::css::uno::Any& Distance_, const ::css::uno::Any& PostEquidistant_, const ::css::uno::Any& BaseValue_, const ::css::uno::Sequence< ::css::chart2::SubIncrement >& SubIncrements_);

    ::css::uno::Any Distance;
    ::css::uno::Any PostEquidistant;
    ::css::uno::Any BaseValue;
    ::css::uno::Sequence< ::css::chart2::SubIncrement > SubIncrements;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::IncrementData const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::chart2::IncrementData *);

#endif
