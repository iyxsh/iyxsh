#ifndef INCLUDED_COM_SUN_STAR_GRAPHIC_XGRAPHICTRANSFORMER_HDL
#define INCLUDED_COM_SUN_STAR_GRAPHIC_XGRAPHICTRANSFORMER_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace graphic { class XGraphic; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace graphic {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XGraphicTransformer : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XGraphicTransformer() = default;
    XGraphicTransformer(XGraphicTransformer const &) = default;
    XGraphicTransformer(XGraphicTransformer &&) = default;
    XGraphicTransformer & operator =(XGraphicTransformer const &) = default;
    XGraphicTransformer & operator =(XGraphicTransformer &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::css::graphic::XGraphic > SAL_CALL colorChange( const ::css::uno::Reference< ::css::graphic::XGraphic >& In, ::sal_Int32 ColorFrom, ::sal_Int8 tolerance, ::sal_Int32 ColorTo, ::sal_Int8 AlphaTo ) = 0;
    virtual ::css::uno::Reference< ::css::graphic::XGraphic > SAL_CALL applyDuotone( const ::css::uno::Reference< ::css::graphic::XGraphic >& In, ::sal_Int32 ColorOne, ::sal_Int32 ColorTwo ) = 0;
    virtual ::css::uno::Reference< ::css::graphic::XGraphic > SAL_CALL applyBrightnessContrast( const ::css::uno::Reference< ::css::graphic::XGraphic >& In, ::sal_Int32 brightness, ::sal_Int32 contrast, ::sal_Bool mso ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XGraphicTransformer() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::graphic::XGraphicTransformer const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::graphic::XGraphicTransformer > *);

#endif
