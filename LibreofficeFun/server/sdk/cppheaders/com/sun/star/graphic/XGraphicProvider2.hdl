#ifndef INCLUDED_COM_SUN_STAR_GRAPHIC_XGRAPHICPROVIDER2_HDL
#define INCLUDED_COM_SUN_STAR_GRAPHIC_XGRAPHICPROVIDER2_HDL

#include "sal/config.h"

#include "com/sun/star/beans/PropertyValues.hdl"
namespace com { namespace sun { namespace star { namespace graphic { class XGraphic; } } } }
#include "com/sun/star/graphic/XGraphicProvider.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace graphic {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XGraphicProvider2 : public ::css::graphic::XGraphicProvider
{
public:
#if defined LIBO_INTERNAL_ONLY
    XGraphicProvider2() = default;
    XGraphicProvider2(XGraphicProvider2 const &) = default;
    XGraphicProvider2(XGraphicProvider2 &&) = default;
    XGraphicProvider2 & operator =(XGraphicProvider2 const &) = default;
    XGraphicProvider2 & operator =(XGraphicProvider2 &&) = default;
#endif


    // Methods
    virtual ::css::uno::Sequence< ::css::uno::Reference< ::css::graphic::XGraphic > > SAL_CALL queryGraphics( const ::css::uno::Sequence< ::css::uno::Sequence< ::css::beans::PropertyValue > >& MediaPropertiesSeq ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XGraphicProvider2() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::graphic::XGraphicProvider2 const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::graphic::XGraphicProvider2 > *);

#endif
