#ifndef INCLUDED_COM_SUN_STAR_REGISTRY_XSIMPLEREGISTRY_HDL
#define INCLUDED_COM_SUN_STAR_REGISTRY_XSIMPLEREGISTRY_HDL

#include "sal/config.h"

namespace com { namespace sun { namespace star { namespace registry { class XRegistryKey; } } } }
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace registry {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XSimpleRegistry : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XSimpleRegistry() = default;
    XSimpleRegistry(XSimpleRegistry const &) = default;
    XSimpleRegistry(XSimpleRegistry &&) = default;
    XSimpleRegistry & operator =(XSimpleRegistry const &) = default;
    XSimpleRegistry & operator =(XSimpleRegistry &&) = default;
#endif


    // Methods
    virtual ::rtl::OUString SAL_CALL getURL() = 0;
    virtual void SAL_CALL open( const ::rtl::OUString& rURL, ::sal_Bool bReadOnly, ::sal_Bool bCreate ) = 0;
    virtual ::sal_Bool SAL_CALL isValid() = 0;
    virtual void SAL_CALL close() = 0;
    virtual void SAL_CALL destroy() = 0;
    virtual ::css::uno::Reference< ::css::registry::XRegistryKey > SAL_CALL getRootKey() = 0;
    virtual ::sal_Bool SAL_CALL isReadOnly() = 0;
    SAL_DEPRECATED_INTERNAL("marked @deprecated in UNOIDL") virtual void SAL_CALL mergeKey( const ::rtl::OUString& aKeyName, const ::rtl::OUString& aUrl ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XSimpleRegistry() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::registry::XSimpleRegistry const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::registry::XSimpleRegistry > *);

#endif
