#ifndef INCLUDED_COM_SUN_STAR_STYLE_VERTICALALIGNMENT_HDL
#define INCLUDED_COM_SUN_STAR_STYLE_VERTICALALIGNMENT_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace style {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class VerticalAlignment
{

#else

enum class SAL_DLLPUBLIC_RTTI VerticalAlignment
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI VerticalAlignment
{

#endif
    VerticalAlignment_TOP = 0,
    VerticalAlignment_MIDDLE = 1,
    VerticalAlignment_BOTTOM = 2,
    VerticalAlignment_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto VerticalAlignment_TOP = VerticalAlignment::VerticalAlignment_TOP;
constexpr auto VerticalAlignment_MIDDLE = VerticalAlignment::VerticalAlignment_MIDDLE;
constexpr auto VerticalAlignment_BOTTOM = VerticalAlignment::VerticalAlignment_BOTTOM;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::style::VerticalAlignment const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::style::VerticalAlignment *);

#endif
