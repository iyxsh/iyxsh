#ifndef INCLUDED_COM_SUN_STAR_CHART_CHARTLEGENDPOSITION_HDL
#define INCLUDED_COM_SUN_STAR_CHART_CHARTLEGENDPOSITION_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class ChartLegendPosition
{

#else

enum class SAL_DLLPUBLIC_RTTI ChartLegendPosition
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI ChartLegendPosition
{

#endif
    ChartLegendPosition_NONE = 0,
    ChartLegendPosition_LEFT = 1,
    ChartLegendPosition_TOP = 2,
    ChartLegendPosition_RIGHT = 3,
    ChartLegendPosition_BOTTOM = 4,
    ChartLegendPosition_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto ChartLegendPosition_NONE = ChartLegendPosition::ChartLegendPosition_NONE;
constexpr auto ChartLegendPosition_LEFT = ChartLegendPosition::ChartLegendPosition_LEFT;
constexpr auto ChartLegendPosition_TOP = ChartLegendPosition::ChartLegendPosition_TOP;
constexpr auto ChartLegendPosition_RIGHT = ChartLegendPosition::ChartLegendPosition_RIGHT;
constexpr auto ChartLegendPosition_BOTTOM = ChartLegendPosition::ChartLegendPosition_BOTTOM;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart::ChartLegendPosition const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::chart::ChartLegendPosition *);

#endif
