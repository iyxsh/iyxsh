#ifndef INCLUDED_COM_SUN_STAR_CHART_CHARTAXISMARKPOSITION_HDL
#define INCLUDED_COM_SUN_STAR_CHART_CHARTAXISMARKPOSITION_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class ChartAxisMarkPosition
{

#else

enum class SAL_DLLPUBLIC_RTTI ChartAxisMarkPosition
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI ChartAxisMarkPosition
{

#endif
    ChartAxisMarkPosition_AT_LABELS = 0,
    ChartAxisMarkPosition_AT_AXIS = 1,
    ChartAxisMarkPosition_AT_LABELS_AND_AXIS = 2,
    ChartAxisMarkPosition_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto ChartAxisMarkPosition_AT_LABELS = ChartAxisMarkPosition::ChartAxisMarkPosition_AT_LABELS;
constexpr auto ChartAxisMarkPosition_AT_AXIS = ChartAxisMarkPosition::ChartAxisMarkPosition_AT_AXIS;
constexpr auto ChartAxisMarkPosition_AT_LABELS_AND_AXIS = ChartAxisMarkPosition::ChartAxisMarkPosition_AT_LABELS_AND_AXIS;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart::ChartAxisMarkPosition const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::chart::ChartAxisMarkPosition *);

#endif
