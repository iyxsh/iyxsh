#ifndef INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATEMOTION_HDL
#define INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATEMOTION_HDL

#include "sal/config.h"

#include "com/sun/star/animations/XAnimate.hdl"
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace animations {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XAnimateMotion : public ::css::animations::XAnimate
{
public:
#if defined LIBO_INTERNAL_ONLY
    XAnimateMotion() = default;
    XAnimateMotion(XAnimateMotion const &) = default;
    XAnimateMotion(XAnimateMotion &&) = default;
    XAnimateMotion & operator =(XAnimateMotion const &) = default;
    XAnimateMotion & operator =(XAnimateMotion &&) = default;
#endif


    // Attributes
    virtual ::css::uno::Any SAL_CALL getPath() = 0;
    virtual void SAL_CALL setPath( const ::css::uno::Any& _path ) = 0;
    virtual ::css::uno::Any SAL_CALL getOrigin() = 0;
    virtual void SAL_CALL setOrigin( const ::css::uno::Any& _origin ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAnimateMotion() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::animations::XAnimateMotion const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::animations::XAnimateMotion > *);

#endif
