#ifndef INCLUDED_COM_SUN_STAR_BEANS_PROPERTYCHANGEEVENT_HDL
#define INCLUDED_COM_SUN_STAR_BEANS_PROPERTYCHANGEEVENT_HDL

#include "sal/config.h"

#include "com/sun/star/lang/EventObject.hdl"
#include "com/sun/star/uno/Any.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace beans {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI PropertyChangeEvent: public ::css::lang::EventObject {
    inline PropertyChangeEvent();

    inline PropertyChangeEvent(const ::css::uno::Reference< ::css::uno::XInterface >& Source_, const ::rtl::OUString& PropertyName_, const ::sal_Bool& Further_, const ::sal_Int32& PropertyHandle_, const ::css::uno::Any& OldValue_, const ::css::uno::Any& NewValue_);

    ::rtl::OUString PropertyName CPPU_GCC3_ALIGN(::css::lang::EventObject);
    ::sal_Bool Further;
    ::sal_Int32 PropertyHandle;
    ::css::uno::Any OldValue;
    ::css::uno::Any NewValue;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::beans::PropertyChangeEvent const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::beans::PropertyChangeEvent *);

#endif
