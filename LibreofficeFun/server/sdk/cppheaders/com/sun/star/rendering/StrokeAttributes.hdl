#ifndef INCLUDED_COM_SUN_STAR_RENDERING_STROKEATTRIBUTES_HDL
#define INCLUDED_COM_SUN_STAR_RENDERING_STROKEATTRIBUTES_HDL

#include "sal/config.h"

#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace rendering {

#ifdef _WIN32
#   pragma pack(push, 8)
#endif

struct SAL_DLLPUBLIC_RTTI SAL_WARN_UNUSED StrokeAttributes {
    inline StrokeAttributes();

    inline StrokeAttributes(const double& StrokeWidth_, const double& MiterLimit_, const ::css::uno::Sequence< double >& DashArray_, const ::css::uno::Sequence< double >& LineArray_, const ::sal_Int8& StartCapType_, const ::sal_Int8& EndCapType_, const ::sal_Int8& JoinType_);

    double StrokeWidth;
    double MiterLimit;
    ::css::uno::Sequence< double > DashArray;
    ::css::uno::Sequence< double > LineArray;
    ::sal_Int8 StartCapType;
    ::sal_Int8 EndCapType;
    ::sal_Int8 JoinType;
};

#ifdef _WIN32
#   pragma pack(pop)
#endif


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::rendering::StrokeAttributes const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::rendering::StrokeAttributes *);

#endif
