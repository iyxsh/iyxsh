#ifndef INCLUDED_COM_SUN_STAR_UNO_DEPLOYMENTEXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_UNO_DEPLOYMENTEXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/uno/RuntimeException.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace uno {

class CPPU_GCC_DLLPUBLIC_EXPORT SAL_WARN_UNUSED DeploymentException : public ::css::uno::RuntimeException
{
public:
    inline CPPU_GCC_DLLPRIVATE DeploymentException(
#if defined LIBO_USE_SOURCE_LOCATION
    LIBO_USE_SOURCE_LOCATION::source_location location = LIBO_USE_SOURCE_LOCATION::source_location::current()
#endif

    );
    inline CPPU_GCC_DLLPRIVATE DeploymentException(const ::rtl::OUString& Message_, const ::css::uno::Reference< ::css::uno::XInterface >& Context_ = ::css::uno::Reference< ::css::uno::XInterface >()
#if defined LIBO_USE_SOURCE_LOCATION
, LIBO_USE_SOURCE_LOCATION::source_location location = LIBO_USE_SOURCE_LOCATION::source_location::current()
#endif
    );

#if !defined LIBO_INTERNAL_ONLY
    inline CPPU_GCC_DLLPRIVATE DeploymentException(DeploymentException const &);

    inline CPPU_GCC_DLLPRIVATE ~DeploymentException();

    inline CPPU_GCC_DLLPRIVATE DeploymentException & operator =(DeploymentException const &);
#endif

};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::uno::DeploymentException const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::DeploymentException *);

#endif
