#ifndef INCLUDED_COM_SUN_STAR_TEXT_XTEXTTABLECURSOR_HDL
#define INCLUDED_COM_SUN_STAR_TEXT_XTEXTTABLECURSOR_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace text {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XTextTableCursor : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XTextTableCursor() = default;
    XTextTableCursor(XTextTableCursor const &) = default;
    XTextTableCursor(XTextTableCursor &&) = default;
    XTextTableCursor & operator =(XTextTableCursor const &) = default;
    XTextTableCursor & operator =(XTextTableCursor &&) = default;
#endif


    // Methods
    virtual ::rtl::OUString SAL_CALL getRangeName() = 0;
    virtual ::sal_Bool SAL_CALL gotoCellByName( const ::rtl::OUString& aCellName, ::sal_Bool bExpand ) = 0;
    virtual ::sal_Bool SAL_CALL goLeft( ::sal_Int16 nCount, ::sal_Bool bExpand ) = 0;
    virtual ::sal_Bool SAL_CALL goRight( ::sal_Int16 nCount, ::sal_Bool bExpand ) = 0;
    virtual ::sal_Bool SAL_CALL goUp( ::sal_Int16 nCount, ::sal_Bool bExpand ) = 0;
    virtual ::sal_Bool SAL_CALL goDown( ::sal_Int16 nCount, ::sal_Bool bExpand ) = 0;
    virtual void SAL_CALL gotoStart( ::sal_Bool bExpand ) = 0;
    virtual void SAL_CALL gotoEnd( ::sal_Bool bExpand ) = 0;
    virtual ::sal_Bool SAL_CALL mergeRange() = 0;
    virtual ::sal_Bool SAL_CALL splitRange( ::sal_Int16 nCount, ::sal_Bool bHorizontal ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XTextTableCursor() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::text::XTextTableCursor const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::text::XTextTableCursor > *);

#endif
