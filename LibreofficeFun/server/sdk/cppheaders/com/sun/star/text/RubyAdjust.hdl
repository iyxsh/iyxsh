#ifndef INCLUDED_COM_SUN_STAR_TEXT_RUBYADJUST_HDL
#define INCLUDED_COM_SUN_STAR_TEXT_RUBYADJUST_HDL

#include "sal/config.h"

#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace text {

#if defined LIBO_INTERNAL_ONLY

#if defined __GNUC__

enum class RubyAdjust
{

#else

enum class SAL_DLLPUBLIC_RTTI RubyAdjust
{

#endif

#else

enum SAL_DLLPUBLIC_RTTI RubyAdjust
{

#endif
    RubyAdjust_LEFT = 0,
    RubyAdjust_CENTER = 1,
    RubyAdjust_RIGHT = 2,
    RubyAdjust_BLOCK = 3,
    RubyAdjust_INDENT_BLOCK = 4,
    RubyAdjust_MAKE_FIXED_SIZE = SAL_MAX_ENUM
};

#if defined LIBO_INTERNAL_ONLY
constexpr auto RubyAdjust_LEFT = RubyAdjust::RubyAdjust_LEFT;
constexpr auto RubyAdjust_CENTER = RubyAdjust::RubyAdjust_CENTER;
constexpr auto RubyAdjust_RIGHT = RubyAdjust::RubyAdjust_RIGHT;
constexpr auto RubyAdjust_BLOCK = RubyAdjust::RubyAdjust_BLOCK;
constexpr auto RubyAdjust_INDENT_BLOCK = RubyAdjust::RubyAdjust_INDENT_BLOCK;
#endif

inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::text::RubyAdjust const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::text::RubyAdjust *);

#endif
