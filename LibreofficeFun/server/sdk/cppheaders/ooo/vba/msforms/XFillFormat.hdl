#ifndef INCLUDED_OOO_VBA_MSFORMS_XFILLFORMAT_HDL
#define INCLUDED_OOO_VBA_MSFORMS_XFILLFORMAT_HDL

#include "sal/config.h"

#include "ooo/vba/XHelperInterface.hdl"
namespace ooo { namespace vba { namespace msforms { class XColorFormat; } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace msforms {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XFillFormat : public ::ooo::vba::XHelperInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XFillFormat() = default;
    XFillFormat(XFillFormat const &) = default;
    XFillFormat(XFillFormat &&) = default;
    XFillFormat & operator =(XFillFormat const &) = default;
    XFillFormat & operator =(XFillFormat &&) = default;
#endif


    // Attributes
    virtual ::sal_Bool SAL_CALL getVisible() = 0;
    virtual void SAL_CALL setVisible( ::sal_Bool _visible ) = 0;
    virtual double SAL_CALL getTransparency() = 0;
    virtual void SAL_CALL setTransparency( double _transparency ) = 0;

    // Methods
    virtual void SAL_CALL Solid() = 0;
    virtual void SAL_CALL TwoColorGradient( ::sal_Int32 style, ::sal_Int32 variant ) = 0;
    virtual ::css::uno::Reference< ::ooo::vba::msforms::XColorFormat > SAL_CALL BackColor() = 0;
    virtual ::css::uno::Reference< ::ooo::vba::msforms::XColorFormat > SAL_CALL ForeColor() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XFillFormat() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::msforms::XFillFormat const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::msforms::XFillFormat > *);

#endif
