#ifndef INCLUDED_OOO_VBA_WORD_XPAGESETUP_HDL
#define INCLUDED_OOO_VBA_WORD_XPAGESETUP_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace word {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XPageSetup : public ::css::uno::XInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XPageSetup() = default;
    XPageSetup(XPageSetup const &) = default;
    XPageSetup(XPageSetup &&) = default;
    XPageSetup & operator =(XPageSetup const &) = default;
    XPageSetup & operator =(XPageSetup &&) = default;
#endif


    // Attributes
    virtual double SAL_CALL getGutter() = 0;
    virtual void SAL_CALL setGutter( double _gutter ) = 0;
    virtual double SAL_CALL getHeaderDistance() = 0;
    virtual void SAL_CALL setHeaderDistance( double _headerdistance ) = 0;
    virtual double SAL_CALL getFooterDistance() = 0;
    virtual void SAL_CALL setFooterDistance( double _footerdistance ) = 0;
    virtual ::sal_Bool SAL_CALL getDifferentFirstPageHeaderFooter() = 0;
    virtual void SAL_CALL setDifferentFirstPageHeaderFooter( ::sal_Bool _differentfirstpageheaderfooter ) = 0;
    virtual ::sal_Int32 SAL_CALL getSectionStart() = 0;
    virtual void SAL_CALL setSectionStart( ::sal_Int32 _sectionstart ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XPageSetup() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::word::XPageSetup const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::word::XPageSetup > *);

#endif
