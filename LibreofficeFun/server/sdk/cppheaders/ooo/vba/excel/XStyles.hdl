#ifndef INCLUDED_OOO_VBA_EXCEL_XSTYLES_HDL
#define INCLUDED_OOO_VBA_EXCEL_XSTYLES_HDL

#include "sal/config.h"

#include "ooo/vba/XCollection.hdl"
namespace ooo { namespace vba { namespace excel { class XStyle; } } }
#include "com/sun/star/uno/Any.h"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace excel {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XStyles : public ::ooo::vba::XCollection
{
public:
#if defined LIBO_INTERNAL_ONLY
    XStyles() = default;
    XStyles(XStyles const &) = default;
    XStyles(XStyles &&) = default;
    XStyles & operator =(XStyles const &) = default;
    XStyles & operator =(XStyles &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::ooo::vba::excel::XStyle > SAL_CALL Add( const ::rtl::OUString& Name, const ::css::uno::Any& BasedOn ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XStyles() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::excel::XStyles const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::excel::XStyles > *);

#endif
