#ifndef INCLUDED_OOO_VBA_EXCEL_XPIVOTTABLE_HDL
#define INCLUDED_OOO_VBA_EXCEL_XPIVOTTABLE_HDL

#include "sal/config.h"

#include "ooo/vba/XHelperInterface.hdl"
namespace ooo { namespace vba { namespace excel { class XPivotCache; } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace ooo { namespace vba { namespace excel {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XPivotTable : public ::ooo::vba::XHelperInterface
{
public:
#if defined LIBO_INTERNAL_ONLY
    XPivotTable() = default;
    XPivotTable(XPivotTable const &) = default;
    XPivotTable(XPivotTable &&) = default;
    XPivotTable & operator =(XPivotTable const &) = default;
    XPivotTable & operator =(XPivotTable &&) = default;
#endif


    // Methods
    virtual ::css::uno::Reference< ::ooo::vba::excel::XPivotCache > SAL_CALL PivotCache() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XPivotTable() SAL_NOEXCEPT {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::ooo::vba::excel::XPivotTable const *);
} } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::ooo::vba::excel::XPivotTable > *);

#endif
